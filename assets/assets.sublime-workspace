{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sam",
				"samplerId"
			],
			[
				"sampler",
				"samplerSlot"
			],
			[
				"pr",
				"programId_"
			],
			[
				"ligh",
				"lightEffectShadow_"
			],
			[
				"Windows",
				"WindowsMouse"
			],
			[
				"GL_TE",
				"GL_TEXTURE_WRAP_S"
			],
			[
				"as",
				"addressMode"
			],
			[
				"sha",
				"shadowCoordOffset"
			],
			[
				"dep",
				"depthCompare"
			],
			[
				"Sha",
				"ShadowMapSize"
			],
			[
				"shadow",
				"shadowFactor"
			],
			[
				"shadw",
				"shadowFactor"
			],
			[
				"depth",
				"depthToCompare"
			],
			[
				"pos",
				"positionScreen"
			],
			[
				"shdao",
				"shadowMapDepthRenderTarget"
			],
			[
				"shadowMa",
				"shadowMapDepthTexture"
			],
			[
				"un",
				"uniformName"
			],
			[
				"spotl",
				"spotLightFrameBuffer_"
			],
			[
				"rend",
				"renderTargetCount"
			],
			[
				"ren",
				"renderTargetId"
			],
			[
				"spo",
				"spotLightRenderTarget_"
			],
			[
				"light",
				"lightFrameBuffer_"
			],
			[
				"dire",
				"directionalLightFrameBuffer_"
			],
			[
				"directional",
				"directionalLightFrameBuffer_"
			],
			[
				"renderTar",
				"renderTargetTextures_"
			],
			[
				"depthBufferTar",
				"depthBufferTarget_"
			],
			[
				"Open",
				"OpenGL32GraphicsInterface"
			],
			[
				"inc",
				"include"
			],
			[
				"PLATF",
				"PLATFORM_LINUX"
			],
			[
				"pix",
				"pixelPositionFromLight"
			],
			[
				"nor",
				"normal"
			],
			[
				"li",
				"lightContribution"
			],
			[
				"texco",
				"texCoords"
			],
			[
				"cp",
				"cpp_file"
			],
			[
				"cpp",
				"cpp_files"
			],
			[
				"Tex",
				"TextureOffset"
			],
			[
				"sa",
				"sampleDepth"
			],
			[
				"lig",
				"lightContribution"
			],
			[
				"nom",
				"normal"
			],
			[
				"pac",
				"PackDepth24"
			],
			[
				"unpackde",
				"UnpackDepth24"
			],
			[
				"Ker",
				"Kernel"
			],
			[
				"pack",
				"packedDepth"
			],
			[
				"tex",
				"texCoord"
			],
			[
				"Co",
				"ColorToUnit24New"
			],
			[
				"Uni",
				"UnitToColor24New"
			],
			[
				"normal",
				"normal"
			],
			[
				"o",
				"occlusionContribution"
			],
			[
				"re",
				"rvec"
			],
			[
				"KE",
				"KernelSize"
			],
			[
				"de",
				"depth"
			],
			[
				"SHa",
				"ShadowMapSize"
			],
			[
				"p",
				"pixelPositionFromLightRaw"
			],
			[
				"pi",
				"pixelPositionFromLight"
			],
			[
				"float",
				"float4x4"
			],
			[
				"Ligh",
				"LightViewProj"
			],
			[
				"dif",
				"diffuseContribution"
			],
			[
				"di",
				"diffuseContribution"
			],
			[
				"spe",
				"specularContribution"
			],
			[
				"Nor",
				"NormalMatrix"
			],
			[
				"norma",
				"normalData"
			],
			[
				"Di",
				"DiffusePower"
			],
			[
				"C",
				"ColorMap"
			],
			[
				"l",
				"LightDirection"
			],
			[
				"No",
				"NormalMap"
			],
			[
				"Norm",
				"NormalMap"
			],
			[
				"sample",
				"sampleDepth"
			],
			[
				"r",
				"Radius"
			],
			[
				"norm",
				"normalWorld"
			],
			[
				"scre",
				"screenPositionHom"
			],
			[
				"scr",
				"screenPositionHom"
			],
			[
				"Normal",
				"NormalMatrix"
			],
			[
				"diff",
				"diffuseStrength"
			],
			[
				"NOr",
				"NormalMatrix"
			],
			[
				"Light",
				"LightDirection"
			],
			[
				"Dif",
				"diffuseStrength"
			],
			[
				"same",
				"sampleDepth"
			],
			[
				"sampe",
				"sampleDepth"
			],
			[
				"ra",
				"rangeIsInvalid"
			],
			[
				"occl",
				"occlusionContribution"
			],
			[
				"samp",
				"samplePos"
			],
			[
				"Dep",
				"DepthMapSamplerState"
			],
			[
				"sampleA",
				"sampleAtViewPosition"
			],
			[
				"sameDep",
				"sampleDepthView"
			],
			[
				"Nois",
				"NoiseScale"
			],
			[
				"RAD",
				"radius"
			],
			[
				"d",
				"depthHigh"
			],
			[
				"Pos",
				"positionView"
			],
			[
				"po",
				"0f-positionScreen"
			],
			[
				"oc",
				"occlusion"
			],
			[
				"occ",
				"occlusionContribution"
			],
			[
				"pso",
				"positionWorld"
			],
			[
				"random",
				"randomNormal"
			],
			[
				"dept",
				"depthDifference"
			]
		]
	},
	"buffers":
	[
		{
			"file": "assets.sublime-project",
			"settings":
			{
				"buffer_size": 853,
				"line_ending": "Windows"
			}
		},
		{
			"file": "shaders/deferred_ssao.cg",
			"settings":
			{
				"buffer_size": 2527,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 138.0,
		"selected_items":
		[
			[
				"deb",
				"Build: Debug"
			]
		],
		"width": 404.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/nk/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/nk/Development/prototype/src/engine/common/renderer/DeferredSSAOPass.cpp",
		"/home/nk/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/nk/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/nk/Development/prototype/assets/scenes/cauldron/cauldron.scene",
		"/home/nk/Development/prototype/src/engine/common/renderer/WorldLoader.cpp",
		"/home/nk/Development/prototype/assets/shaders/deferred_lighting_spot_light_shadow.cg",
		"/home/nk/Development/prototype/src/engine/common/renderer/SpotLight.cpp",
		"/home/nk/Development/prototype/src/engine/common/renderer/DeferredSpotLightsPass.cpp",
		"/home/nk/Development/prototype/src/engine/platform/renderer/gl32/OpenGLEffect.h",
		"/home/nk/Development/prototype/src/engine/platform/renderer/gl32/OpenGLEffect.cpp",
		"/home/nk/Development/prototype/src/engine/platform/renderer/gl32/OpenGL32GraphicsInterface.cpp",
		"/home/nk/Development/prototype/src/prototype/Game.cpp",
		"/home/nk/Development/prototype/src/engine/common/input/IMouse.h",
		"/home/nk/Development/prototype/src/engine/platform/input/win/WindowsMouse.h",
		"/home/nk/Development/prototype/src/engine/platform/input/win/WindowsMouse.cpp",
		"/home/nk/Development/prototype/src/engine/common/input/Mouse.h",
		"/home/nk/Development/prototype/src/engine/platform/input/linux/LinuxMouse.h",
		"/home/nk/Development/prototype/src/engine/common/input/Mouse.cpp",
		"/home/nk/Development/prototype/src/engine/platform/input/linux/LinuxMouse.cpp",
		"/home/nk/Development/prototype/src/engine/common/renderer/IGraphicsInterface.h",
		"/home/nk/Development/prototype/assets/shaders/utils.h",
		"/home/nk/Development/prototype/assets/shaders/depth.h",
		"/home/nk/Development/prototype/assets/shaders/standard.h",
		"/home/nk/Development/prototype/assets/shaders/compiled/deferred_lighting_spot_light_shadow.shader.gl32.fragment",
		"/home/nk/Development/prototype/src/engine/common/renderer/DeferredLightingRenderStage.cpp",
		"/home/nk/Development/prototype/assets/scenes/simple/floor_and_cube.scene",
		"/media/nk/MYLINUXLIVE/floor_and_cube.scene",
		"/home/nk/Development/prototype/src/engine/common/renderer/DeferredGeometryPass.h",
		"/home/nk/Development/prototype/src/engine/platform/renderer/gl32/GRemdeyExtensions.cpp",
		"/home/nk/Development/prototype/src/engine/platform/renderer/gl32/GLUtilities.h",
		"/home/nk/Development/prototype/src/engine/common/renderer/DeferredShadowPass.cpp",
		"/home/nk/Development/prototype/src/engine/common/renderer/SpotLight.h",
		"/home/nk/Development/prototype/src/engine/common/renderer/GraphicsInterface.cpp",
		"/home/nk/Development/prototype/src/engine/common/renderer/DeferredGeometryPass.cpp",
		"/home/nk/Development/prototype/src/engine/common/renderer/DeferredFXAAPass.cpp",
		"/home/nk/Development/prototype/src/engine/common/renderer/AverageBlur.cpp",
		"/home/nk/Development/prototype/src/engine/platform/renderer/gl32/OpenGL32GraphicsInterface.h",
		"/home/nk/Development/prototype/src/engine/common/renderer/DeferredDirectionalLightsPass.cpp",
		"/home/nk/Development/prototype/src/engine/common/renderer/DeferredClearBuffersPass.cpp",
		"/home/nk/Development/prototype/src/engine/platform/renderer/gl32/GRemdeyExtensions.h",
		"/home/nk/Development/prototype/src/engine/common/renderer/Renderer3dDeferred.cpp",
		"/home/nk/Development/prototype/src/engine/common/renderer/DeferredSpotLightsPass.h",
		"/home/nk/Development/prototype/src/engine/common/renderer/GraphicsInterface.h",
		"/home/nk/Development/prototype/src/engine/common/renderer/GraphicsInterface.mm",
		"/home/nk/Development/prototype/src/engine/common/renderer/DeferredLightingRenderStage.h",
		"/home/nk/Development/prototype/src/engine/common/renderer/DeferredDirectionalLightsPass.h",
		"/home/nk/Development/prototype/src/engine/common/renderer/DeferredInitRenderStage.cpp",
		"/home/nk/Development/prototype/build/obj/Release/DeferredLightingRenderStage.d",
		"/home/nk/Development/prototype/assets/shaders/deferred_render_color_normal_depth.cg",
		"/home/nk/Development/prototype/assets/shaders/compiled/deferred_render_color_normal_depth.shader.gl32.fragment",
		"/home/nk/Development/prototype/assets/shaders/compiled/deferred_render_color_normal_depth.shader.gl32.vertex",
		"/home/nk/Development/prototype/assets/shaders/compile",
		"/home/nk/Development/prototype/src/engine/common/renderer/DeferredInitRenderStage.h",
		"/home/nk/Development/prototype/assets/shaders/deferred_fullscreen_texture.cg",
		"/home/nk/Development/prototype/build/obj/Debug/WorldLoader.d",
		"/home/nk/Development/prototype/src/engine/common/serialization/BinaryModelDeserializer.cpp",
		"/home/nk/Development/prototype/src/engine/platform/renderer/gl32/OpenGL.h",
		"/usr/include/GL/glfw.h",
		"/usr/include/GL/glew.h",
		"/home/nk/Development/prototype/libs/glew/include/GL/glew.h",
		"/home/nk/Development/prototype/premake4.lua",
		"/home/nk/Development/prototype/assets/shaders/deferred_render_colormap_normal_depth.cg",
		"/home/nk/Development/prototype/assets/shaders/compiled/deferred_render_colormap_normal_depth.shader.gl32.fragment",
		"/home/nk/Development/prototype/projects/vc9/Visual Lint/CppCheck/prototype/Debug_Win32/engine/DeferredGeometryPass.cpp.txt",
		"/home/nk/Development/prototype/src/engine/common/renderer/DeferredPresentStage.cpp",
		"/home/nk/Development/prototype/src/engine/common/renderer/GraphicsAPIType.h",
		"/home/nk/Development/prototype/assets/shaders/compiled/gaussian_blur_horizontal_16_tap.shader.gl32.fragment",
		"/home/nk/Development/prototype/build/obj/Debug/DeferredInitRenderStage.d",
		"/home/nk/Development/prototype/build/obj/Release/DeferredInitRenderStage.d",
		"/home/nk/Development/prototype/src/engine/platform/input/linux/LinuxKeyStates.h",
		"/home/nk/Development/prototype/src/prototype/App.cpp",
		"/home/nk/Development/prototype/src/engine/platform/input/win/WindowsKeyboard.cpp",
		"/home/nk/Development/prototype/src/engine/platform/input/win/WindowsKeyStates.h",
		"/home/nk/Development/prototype/src/engine/common/input/IKeyboard.h",
		"/home/nk/Development/prototype/src/engine/platform/input/win/WindowsKeyboard.h",
		"/home/nk/Development/prototype/src/engine/platform/input/linux/LinuxKeyboard.h",
		"/home/nk/Development/prototype/src/engine/common/input/Keyboard.cpp",
		"/home/nk/Development/prototype/src/engine/common/input/Keyboard.h",
		"/home/nk/Development/prototype/src/engine/common/input/KeyStates.h",
		"/home/nk/Development/apitrace/CMakeLists.txt",
		"/home/nk/Development/prototype/scripts/premake_all.bat",
		"/home/nk/Development/prototype/Game",
		"/home/nk/Development/prototype/src/engine/platform/input/linux/LinuxKeyboard.cpp",
		"/home/nk/Development/prototype/src/engine/platform/input/mac/MacMouse.cpp",
		"/home/nk/Development/prototype/src/engine/platform/input/mac/MacMouse.h",
		"/home/nk/Development/prototype/assets/scenes/simple/floor.scene",
		"/home/nk/Development/prototype/assets/scenes/shadow/simple.scene",
		"/home/nk/Development/prototype/build/project/win/gmake/game.make",
		"/home/nk/Development/prototype/src/engine/common/renderer/EffectCache.cpp",
		"/home/nk/Development/prototype/src/engine/common/io/Endian.h",
		"/home/nk/Development/prototype/src/engine/common/io/Endian.cpp",
		"/home/nk/Development/prototype/src/engine/common/platform/PlatformDefs.h",
		"/home/nk/Development/prototype/build/project/win/gmake/Makefile",
		"/home/nk/Development/prototype/projects/vc9/Visual Lint/CppCheck/prototype/Debug_Win32/engine/EffectCache.cpp.vlstatus",
		"/home/nk/Development/prototype/assets/shaders/fxaa_main.cg",
		"/home/nk/Development/prototype/src/engine/common/core/HashMap.h",
		"/home/nk/Development/prototype/src/engine/common/renderer/EffectCache.h",
		"/home/nk/Development/prototype/src/engine/common/renderer/Camera.cpp",
		"/home/nk/Development/prototype/src/engine/common/dynamics/NavierStokesSimulation.cpp",
		"/home/nk/Development/prototype/src/engine/common/input/NullKeyboard.h",
		"/home/nk/Development/prototype/src/engine/common/memory/Allocation.cpp",
		"/home/nk/Development/prototype/src/engine/common/io/DDSImage.cpp",
		"/home/nk/Development/prototype/src/engine/common/renderer/Font.h",
		"/home/nk/Development/prototype/old/oldsrc/ui/Label.h",
		"/home/nk/Development/prototype/src/engine/common/ui/Label.h",
		"/home/nk/Development/prototype/src/engine/common/ui/Label.cpp",
		"/home/nk/Development/prototype/src/engine/common/ui/FPSStats.cpp",
		"/home/nk/Development/prototype/old/oldsrc/ui/Sprite.h",
		"/home/nk/Development/prototype/src/engine/common/ui/Sprite.h",
		"/home/nk/Development/prototype/src/engine/common/ui/Sprite.cpp",
		"/home/nk/Development/prototype/src/engine/common/ui/UI.cpp",
		"/home/nk/Development/prototype/src/engine/common/ui/UIMouse.h",
		"/home/nk/Development/prototype/src/engine/common/ui/UILine.h",
		"/home/nk/Development/prototype/src/engine/common/core/Clock.cpp",
		"/home/nk/Development/prototype/src/engine/common/core/String.cpp",
		"/usr/include/GL/gl3.h",
		"/home/nk/Development/prototype/src/engine/common/renderer/IGraphicsInterface.cpp",
		"/home/nk/Development/prototype/assets/shaders/deferred_depth.cg",
		"/home/nk/Development/prototype/assets/shaders/deferred_lighting_spot_light.cg",
		"/home/nk/Development/prototype/assets/shaders/deferred_light_composition.cg",
		"/home/nk/Development/prototype/assets/assets.sublime-project",
		"/home/nk/Development/prototype/scripts/premake_linux",
		"/usr/share/X11/xorg.conf.d/50-synaptics.conf",
		"/Users/nk/Development/prototype/assets/shaders/depth.h",
		"/Users/nk/Development/prototype/scripts/trace_gl",
		"/Users/nk/Development/prototype/assets/scenes/simple/floor_and_cube.scene",
		"/Users/nk/Development/prototype/assets/shaders/fxaa_color_luma.cg"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"",
			"half",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"createdep",
			"gltex",
			"shadowm",
			"shadowmap",
			"Greme",
			"viewprojin",
			"samplerBindings_",
			"spotlight",
			"endperformance",
			"renderlight",
			"depth",
			"GPU_TRACE",
			"include",
			"COLOR1",
			"glFramebufferTexture2D",
			"glFramebufferTex",
			"glframebuffertex",
			"framebufferte",
			"depthbufferTex",
			"createrend",
			"enable_gu",
			"require_gu",
			"qt",
			"QT",
			"Mac",
			"glew",
			"GL3_PROTOTYPES",
			"hash_Map",
			"lightVectorViewSpace",
			"worldPosition",
			"viewPosition",
			"pixeltoli",
			"DirectionToLight",
			"spotLightRenderTexture_",
			"event",
			".offset",
			"mTextureAddress",
			"updateTexture",
			"\\n",
			"v80",
			"v90",
			"props",
			"ps3_de",
			"universal32",
			"packDepth",
			"_",
			"half",
			"positionworld",
			"float",
			"FxaaPixelShader",
			"FxaaTex",
			"world",
			"DepthMap2",
			"depthmap",
			"{\n",
			");",
			"fxaa3_11.h",
			"fxaa",
			"mat",
			"SubFactor",
			"Inverse",
			"Determinant",
			"t0",
			"0_",
			"t1",
			"1_",
			"2_",
			"t2",
			"t3",
			"3_",
			"3",
			"]",
			"][",
			"this->value[",
			"value_type",
			"View",
			"ViewProjInv",
			"= 200.0f;",
			"getnorma",
			"g_f4x4View",
			"	\n",
			"1",
			"sample",
			"dll"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Linux",
			"v90",
			"v80",
			"",
			"float",
			"half",
			"m",
			"subFactor",
			"inverse",
			"determinant",
			"t1",
			"1_",
			"t2",
			"m2",
			"2_",
			"3_",
			"t3",
			"t4",
			"4_",
			"4",
			"_",
			"",
			"mat",
			"float"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "assets.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 853,
						"regions":
						{
						},
						"selection":
						[
							[
								401,
								401
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "shaders/deferred_ssao.cg",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2527,
						"regions":
						{
						},
						"selection":
						[
							[
								86,
								86
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 171.0
	},
	"project": "/home/nk/Development/prototype/assets/assets.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"ssao.c",
				"shaders/deferred_ssao.cg"
			],
			[
				"ssaopa",
				"src/engine/common/renderer/DeferredSSAOPass.cpp"
			],
			[
				"game",
				"src/prototype/Game.cpp"
			],
			[
				"gl32",
				"src/engine/platform/renderer/gl32/OpenGL32GraphicsInterface.cpp"
			],
			[
				"spotlightp",
				"src/engine/common/renderer/DeferredSpotLightsPass.cpp"
			],
			[
				"spotlight",
				"src/engine/common/renderer/SpotLight.cpp"
			],
			[
				"linux",
				"src/engine/platform/input/linux/LinuxMouse.cpp"
			],
			[
				"mouse.cpp",
				"src/engine/common/input/Mouse.cpp"
			],
			[
				"linuxmo",
				"src/engine/platform/input/linux/LinuxMouse.h"
			],
			[
				"imouse",
				"src/engine/common/input/Mouse.h"
			],
			[
				"linuxmouse",
				"src/engine/platform/input/linux/LinuxMouse.h"
			],
			[
				"windows",
				"src/engine/platform/input/win/WindowsMouse.h"
			],
			[
				"mouse",
				"src/engine/common/input/Mouse.h"
			],
			[
				"igrap",
				"src/engine/common/renderer/IGraphicsInterface.h"
			],
			[
				"worldload",
				"src/engine/common/renderer/WorldLoader.cpp"
			],
			[
				"spotli",
				"src/engine/common/renderer/SpotLight.cpp"
			],
			[
				"cauldron.sc",
				"assets/scenes/cauldron/cauldron.scene"
			],
			[
				"_shadow.c",
				"assets/shaders/deferred_lighting_spot_light_shadow.cg"
			],
			[
				"opengleff",
				"src/engine/platform/renderer/gl32/OpenGLEffect.h"
			],
			[
				"_shadow.shad",
				"assets/shaders/compiled/deferred_lighting_spot_light_shadow.shader.gl32.fragment"
			],
			[
				"_shadow.gl",
				"assets/shaders/compiled/deferred_lighting_spot_light_shadow.shader.gl32.fragment"
			],
			[
				"uti",
				"assets/shaders/utils.h"
			],
			[
				"stan",
				"assets/shaders/standard.h"
			],
			[
				"opengl32",
				"src/engine/platform/renderer/gl32/OpenGL32GraphicsInterface.cpp"
			],
			[
				"stand",
				"assets/shaders/standard.h"
			],
			[
				"_shadow.shader.gl",
				"assets/shaders/compiled/deferred_lighting_spot_light_shadow.shader.gl32.fragment"
			],
			[
				"depth.",
				"assets/shaders/depth.h"
			],
			[
				"floor_and",
				"assets/scenes/simple/floor_and_cube.scene"
			],
			[
				"lighting",
				"src/engine/common/renderer/DeferredLightingRenderStage.cpp"
			],
			[
				"depth",
				"assets/shaders/depth.h"
			],
			[
				"dpeth.",
				"assets/shaders/depth.h"
			],
			[
				"game.c",
				"src/prototype/Game.cpp"
			],
			[
				"shadow.cg",
				"assets/shaders/deferred_lighting_spot_light_shadow.cg"
			],
			[
				"shadow",
				"assets/shaders/compiled/deferred_lighting_spot_light_shadow.shader.gl32.fragment"
			],
			[
				"openglef",
				"src/engine/platform/renderer/gl32/OpenGLEffect.cpp"
			],
			[
				"gl",
				"src/engine/platform/renderer/gl32/OpenGLEffect.cpp"
			],
			[
				"deferred_spo",
				"assets/shaders/compiled/deferred_lighting_spot_light_shadow.shader.gl32.fragment"
			],
			[
				"spot",
				"assets/shaders/deferred_lighting_spot_light_shadow.cg"
			],
			[
				"spotlightpa",
				"src/engine/common/renderer/DeferredSpotLightsPass.cpp"
			],
			[
				"shadowpass",
				"src/engine/common/renderer/DeferredShadowPass.cpp"
			],
			[
				"and_cu",
				"assets/scenes/simple/floor_and_cube.scene"
			],
			[
				"geomtry",
				"src/engine/common/renderer/DeferredGeometryPass.cpp"
			],
			[
				"glef",
				"src/engine/platform/renderer/gl32/OpenGLEffect.cpp"
			],
			[
				"deferred_lighting_spot",
				"assets/shaders/compiled/deferred_lighting_spot_light_shadow.shader.gl32.fragment"
			],
			[
				"glut",
				"src/engine/platform/renderer/gl32/GLUtilities.h"
			],
			[
				"avera",
				"src/engine/common/renderer/AverageBlur.cpp"
			],
			[
				"gre",
				"src/engine/platform/renderer/gl32/GRemdeyExtensions.cpp"
			],
			[
				"",
				"src/engine/platform/renderer/gl32/OpenGL32GraphicsInterface.cpp"
			],
			[
				"worldlo",
				"src/engine/common/renderer/WorldLoader.cpp"
			],
			[
				"graphicsin",
				"src/engine/common/renderer/GraphicsInterface.cpp"
			],
			[
				"defrerredspotl",
				"src/engine/common/renderer/DeferredSpotLightsPass.cpp"
			],
			[
				"directionallight",
				"src/engine/common/renderer/DeferredDirectionalLightsPass.cpp"
			],
			[
				"renderer",
				"src/engine/common/renderer/Renderer3dDeferred.cpp"
			],
			[
				"directional",
				"src/engine/common/renderer/DeferredDirectionalLightsPass.cpp"
			],
			[
				"lightingren",
				"src/engine/common/renderer/DeferredLightingRenderStage.cpp"
			],
			[
				"geom",
				"src/engine/common/renderer/DeferredGeometryPass.cpp"
			],
			[
				"initren",
				"src/engine/common/renderer/DeferredInitRenderStage.cpp"
			],
			[
				"deferredlig",
				"src/engine/common/renderer/DeferredLightingRenderStage.cpp"
			],
			[
				"lightingsta",
				"build/obj/Release/DeferredLightingRenderStage.d"
			],
			[
				"renderer3d",
				"src/engine/common/renderer/Renderer3dDeferred.cpp"
			],
			[
				"gleffe",
				"src/engine/platform/renderer/gl32/OpenGLEffect.cpp"
			],
			[
				"render_color",
				"assets/shaders/compiled/deferred_render_color_normal_depth.shader.gl32.fragment"
			],
			[
				"gleff",
				"src/engine/platform/renderer/gl32/OpenGLEffect.cpp"
			],
			[
				"normal_de",
				"assets/shaders/compiled/deferred_render_color_normal_depth.shader.gl32.fragment"
			],
			[
				"color_normal",
				"assets/shaders/compiled/deferred_render_color_normal_depth.shader.gl32.fragment"
			],
			[
				"color_normal_",
				"assets/shaders/compiled/deferred_render_color_normal_depth.shader.gl32.vertex"
			],
			[
				"32",
				"src/engine/platform/renderer/gl32/OpenGL32GraphicsInterface.cpp"
			],
			[
				"compile",
				"assets/shaders/compile"
			],
			[
				"color_no",
				"assets/shaders/deferred_render_color_normal_depth.cg"
			],
			[
				"binary",
				"src/engine/common/serialization/BinaryModelDeserializer.cpp"
			],
			[
				"color.cg",
				"assets/shaders/deferred_render_color_normal_depth.cg"
			],
			[
				"opengl",
				"src/engine/platform/renderer/gl32/OpenGL.h"
			],
			[
				"premal",
				"premake4.lua"
			],
			[
				"fullscreen_tex",
				"assets/shaders/deferred_fullscreen_texture.cg"
			],
			[
				"prema",
				"premake4.lua"
			],
			[
				"colormap",
				"assets/shaders/compiled/deferred_render_colormap_normal_depth.shader.gl32.fragment"
			],
			[
				"init",
				"src/engine/common/renderer/DeferredInitRenderStage.cpp"
			],
			[
				"geomtrypas",
				"src/engine/common/renderer/DeferredGeometryPass.cpp"
			],
			[
				"greomtr",
				"projects/vc9/Visual Lint/CppCheck/prototype/Debug_Win32/engine/DeferredGeometryPass.cpp.txt"
			],
			[
				"grometrypa",
				"src/engine/common/renderer/DeferredGeometryPass.cpp"
			],
			[
				"present",
				"src/engine/common/renderer/DeferredPresentStage.cpp"
			],
			[
				"render",
				"src/engine/common/renderer/Renderer3dDeferred.cpp"
			],
			[
				"igraph",
				"src/engine/common/renderer/IGraphicsInterface.h"
			],
			[
				"igraphi",
				"src/engine/common/renderer/IGraphicsInterface.h"
			],
			[
				"igraphicsin",
				"src/engine/common/renderer/IGraphicsInterface.h"
			],
			[
				"graphi",
				"src/engine/common/renderer/GraphicsInterface.cpp"
			],
			[
				"graphicsint",
				"src/engine/common/renderer/GraphicsInterface.h"
			],
			[
				"graphicsinter",
				"src/engine/common/renderer/GraphicsInterface.cpp"
			],
			[
				"123",
				"assets/shaders/compiled/gaussian_blur_horizontal_16_tap.shader.gl32.fragment"
			],
			[
				"graphicsintre",
				"src/engine/common/renderer/GraphicsInterface.cpp"
			],
			[
				"grometrypass",
				"src/engine/common/renderer/DeferredGeometryPass.cpp"
			],
			[
				"graphics",
				"src/engine/common/renderer/GraphicsAPIType.h"
			],
			[
				"graphicsi",
				"src/engine/common/renderer/GraphicsInterface.cpp"
			],
			[
				"geomtryp",
				"src/engine/common/renderer/DeferredGeometryPass.h"
			],
			[
				"initrendersta",
				"src/engine/common/renderer/DeferredInitRenderStage.cpp"
			],
			[
				"initre",
				"build/obj/Debug/DeferredInitRenderStage.d"
			],
			[
				"keyboard",
				"src/engine/common/input/Keyboard.h"
			],
			[
				"linuxke",
				"src/engine/platform/input/linux/LinuxKeyStates.h"
			],
			[
				"window",
				"src/engine/platform/input/win/WindowsKeyboard.h"
			],
			[
				"app",
				"src/prototype/App.cpp"
			],
			[
				"premake",
				"premake4.lua"
			],
			[
				"ikeybo",
				"src/engine/common/input/IKeyboard.h"
			],
			[
				"32grpa",
				"src/engine/platform/renderer/gl32/OpenGL32GraphicsInterface.cpp"
			],
			[
				"initrend",
				"src/engine/common/renderer/DeferredInitRenderStage.cpp"
			],
			[
				"deferredspo",
				"src/engine/common/renderer/DeferredSpotLightsPass.cpp"
			],
			[
				"deferredli",
				"src/engine/common/renderer/DeferredLightingRenderStage.cpp"
			],
			[
				"mouse.",
				"src/engine/common/input/Mouse.h"
			],
			[
				"game.cpp",
				"src/prototype/Game.cpp"
			],
			[
				"gmae",
				"Game"
			],
			[
				"linuxmou",
				"src/engine/platform/input/linux/LinuxMouse.h"
			],
			[
				"macmou",
				"src/engine/platform/input/mac/MacMouse.h"
			],
			[
				"platform",
				"src/engine/common/platform/PlatformDefs.h"
			],
			[
				"bina",
				"src/engine/common/serialization/BinaryModelDeserializer.cpp"
			],
			[
				"endia",
				"src/engine/common/io/Endian.cpp"
			],
			[
				"binar",
				"src/engine/common/serialization/BinaryModelDeserializer.cpp"
			],
			[
				"floor.sc",
				"assets/scenes/simple/floor.scene"
			],
			[
				"simple.s",
				"assets/scenes/shadow/simple.scene"
			],
			[
				"app.",
				"src/prototype/App.cpp"
			],
			[
				"game.m",
				"build/project/win/gmake/game.make"
			],
			[
				"makefi",
				"build/project/win/gmake/Makefile"
			],
			[
				"effectc",
				"src/engine/common/renderer/EffectCache.cpp"
			],
			[
				"effechca",
				"projects/vc9/Visual Lint/CppCheck/prototype/Debug_Win32/engine/EffectCache.cpp.vlstatus"
			],
			[
				"patfor",
				"src/engine/common/platform/PlatformDefs.h"
			],
			[
				"string.cp",
				"src/engine/common/core/String.cpp"
			],
			[
				"opg",
				"src/engine/platform/renderer/gl32/OpenGLEffect.h"
			],
			[
				"opengl.",
				"src/engine/platform/renderer/gl32/OpenGL.h"
			],
			[
				"openglgr",
				"src/engine/platform/renderer/gl32/OpenGL32GraphicsInterface.h"
			],
			[
				"igraphics",
				"src/engine/common/renderer/IGraphicsInterface.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 215.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
