uniform float4x4 WorldViewProj;

struct VOutput {
      float4 position 	: POSITION;
      float depth 		  : TEXCOORD0;
};

VOutput vs(float4 position : POSITION) {
        VOutput OUT;
        OUT.position = mul(WorldViewProj, position);
        OUT.depth = OUT.position.z / OUT.position.w;
        return OUT;
}

VOutput vsgl(float4 position : ATTR0) {
  return vs(position);
}

float4 ps(float depth : TEXCOORD0) : COLOR {
   return float4(depth, depth, depth, 1.0f);
}

technique dx {
  pass {
    VertexProgram = compile vs_4_0 vs();
    FragmentProgram = compile ps_4_0 ps();
  }
}

technique latest {
  pass {
    VertexProgram = compile latest vsgl();
    FragmentProgram = compile latest ps();
  }
}