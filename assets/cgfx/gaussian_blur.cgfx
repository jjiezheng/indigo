sampler2D SourceMap = sampler_state {
	MinFilter = Point;
	MagFilter = Point;
	WrapS = Clamp;
	WrapT = Clamp;
};

uniform float2 HalfPixel;

struct VOutput {
	float4 position 			: POSITION;
	float2 texCoord				: TEXCOORD0;
};

VOutput vs(float4 position 	: POSITION,
		   float2 texCoord 	: TEXCOORD0) {
    VOutput OUT;
    OUT.position = position;
    OUT.texCoord = texCoord;// - HalfPixel;
    return OUT;
}


VOutput vsgl(float4 position 	: POSITION,
		   	 float4 texCoord 	: TEXCOORD0) {
	return vs(position, texCoord);
}

float4 ps(float2 texCoord : TEXCOORD0) : COLOR {
	return tex2D(SourceMap, texCoord);
}

technique dx {
	pass {
		VertexProgram = compile vs_4_0 vs();
		FragmentProgram = compile ps_4_0 ps();
	}
}

technique gl {
	pass {
		VertexProgram = compile latest vsgl();
		FragmentProgram = compile latest ps();
	}
}
