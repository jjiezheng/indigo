float4 DiffuseColor : COLOR;

float4x4 WorldViewProj;

sampler2D ColorMap = sampler_state {
	MinFilter = Linear;
	MagFilter = Linear;
	WrapS = Clamp;
	WrapT = Clamp;
};

struct VOutput {
	float4 position : POSITION;
  	float2 texCoord : TEXCOORD0;
};

VOutput vs(float4 position : POSITION,
           float2 texCoord : TEXCOORD0) {
	VOutput OUT;
	OUT.position = position;
	OUT.texCoord = texCoord;
  	return OUT;
}

float4 ps(float2 texCoord  : TEXCOORD) : COLOR {
  return tex2D(ColorMap, texCoord);
} 

technique gl {
	pass {
		VertexProgram = compile latest vs();
		FragmentProgram = compile latest ps();
	}
}

technique dx {
	pass {
		VertexProgram = compile vs_4_0 vs();
		FragmentProgram = compile ps_4_0 ps();
	}
}
