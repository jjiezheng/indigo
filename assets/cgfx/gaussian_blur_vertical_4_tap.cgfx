sampler2D SourceMap = sampler_state {
	MinFilter = Linear;
	MagFilter = Linear;
	WrapS = Clamp;
	WrapT = Clamp;
};

float SceneHeight;

const float offsets[4] = {1, 2, 3, 4};
const float weights[4] = float[] (0.7978845608, 0.1079819330, 0.0002676605, 0.0000000122);

struct VOutput {
	float4 position 			: POSITION;
	float2 centerTap			: TEXCOORD0;
};

VOutput vs(float4 position 	: POSITION,
		   float2 texCoord 	: TEXCOORD0) {
    VOutput OUT;
    OUT.position = position;
    OUT.centerTap = texCoord;
    return OUT;
}

float4 ps(float2 centerTap : TEXCOORD0) : COLOR {
	
	float4 color = tex2D(SourceMap, centerTap) * weights[0];

	float4x4 samples;

	float texelSize = 1.0f / SceneHeight;

	for (int i = 1; i < 4; i++) {
		float2 offset = float2(0, 1) * offsets[i] * texelSize;

		float2 rightTap = centerTap + offset;
		color += tex2D(SourceMap, rightTap) * weights[i];

		float2 leftTap = centerTap - offset;
		color += tex2D(SourceMap, leftTap) * weights[i];
	}

	return color;
}

technique dx {
	pass {
		VertexProgram = compile vs_4_0 vs();
		FragmentProgram = compile ps_4_0 ps();
	}
}