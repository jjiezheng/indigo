#define FXAA_PC 1
#define FXAA_HLSL_3 1
#define FXAA_QUALITY__PRESET 15
#include "fxaa.cg"

sampler2D FinalMap = sampler_state {
	MinFilter = Point;
	MagFilter = Point;
	WrapS = Clamp;
	WrapT = Clamp;
};

uniform float4 ScreenSizeInv;

struct VOutput {
	float4 position			: POSITION;
	float2 texCoord			: TEXCOORD0;
};

VOutput vs(float4 position 		: POSITION,
		   float2 texCoord 		: TEXCOORD0) {
	VOutput OUT;
	OUT.position = position;
	OUT.texCoord = texCoord;
 	return OUT;
}

float4 ps(float2 texCoord : TEXCOORD0) : COLOR {
	return FxaaPixelShader(
		texCoord, float4(0), FinalMap, FinalMap, FinalMap, ScreenSizeInv, 
		float4(0), float4(0), float4(0), 
		1.0f, 0.063f, 0.0312f, 2.0f, 
		float(0), float(0), float4(0));
}

technique dx {
	pass {
		VertexProgram = compile vs_4_0 vs();
		FragmentProgram = compile ps_4_0 ps();
	}
}
