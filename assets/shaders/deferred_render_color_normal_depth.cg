#include "standard.h"

uniform float4x4 WorldView;
uniform	float4x4 WorldViewProj;
uniform float4x4 NormalMatrix;

uniform	float4 DiffuseColor;

float Near;
float Far;

struct VOutput {
	float4 position			: POSITION;
	float3 normal			: TEXCOORD0;
	float3 viewNormal		: TEXCOORD1;
	float3 viewPosition		: TEXCOORD2;
};

VOutput vs(	float4 position 	: POSITION,
		  	float3 normal 		: NORMAL) {

	VOutput OUT;

	OUT.normal = normal;
	
	OUT.position = mul(WorldViewProj, position);
	OUT.viewNormal = mul(WorldView, float4(normal, 0)).xyz;
	OUT.viewPosition = mul(WorldView, position).xyz;
	
 	return OUT;
}

struct POutput {
	float4 color 		: COLOR0;
	float3 normal 		: COLOR1;
	float4 depth 		: COLOR2;
	float3 viewNormal 	: COLOR3;
};

POutput ps(	float4 position			: POSITION,
		   	float3 normal			: TEXCOORD0,
		   	float3 viewNormal		: TEXCOORD1,
		   	float3 viewPosition		: TEXCOORD2) {

	POutput OUT;
	
	OUT.color = DiffuseColor;
	OUT.depth.xyz = -viewPosition.z / Far;
	OUT.depth.w = 1;
	OUT.normal = packNormal(normal);
	OUT.viewNormal = packNormal(viewNormal);
	
	return OUT;
}