#include "standard.h"

uniform float4x4 WorldView;
uniform	float4x4 WorldViewProj;
uniform float4x4 NormalMatrix;

sampler2D ColorMap;

float Near;
float Far;

struct VOutput {
	float4 position			: POSITION;
	float3 normal			: TEXCOORD0;
	float2 texCoord			: TEXCOORD1;
	float3 viewNormal		: TEXCOORD2;
	float4 viewPosition		: TEXCOORD3;
};

VOutput vs(	float4 position 	: POSITION,
		  	float3 normal 		: NORMAL,
		  	float2 texCoord 	: TEXCOORD0) {
	VOutput OUT;

	OUT.position = mul(WorldViewProj, position);
	OUT.normal = normal;
	OUT.texCoord = texCoord;
	OUT.viewNormal = mul(NormalMatrix, float4(normal, 0)).rgb;
	OUT.viewPosition = mul(WorldView, position);
	
 	return OUT;
}

struct POutput {
	float4 color 		: COLOR0;
	float3 normal 		: COLOR1;
	float4 depth 		: COLOR2;
	float3 viewNormal 	: COLOR3;
};

POutput ps(	float4 position			: POSITION,
		   	float3 normal			: TEXCOORD0,
		   	float2 texCoord 		: TEXCOORD1,
		   	float3 viewNormal		: TEXCOORD2,
		   	float4 viewPosition		: TEXCOORD3) {

	POutput OUT;
	
	OUT.color = tex2D(ColorMap, texCoord);

	OUT.normal = packNormal(normal);
	OUT.viewNormal = packNormal(viewNormal);

	float linearDepth = -viewPosition.z / Far;
	OUT.depth = packLinearDepth(linearDepth);
	
	return OUT;
}
