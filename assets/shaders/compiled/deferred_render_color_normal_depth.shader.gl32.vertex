// glslv output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -DGL=1 -DGL32=1 -q -profileopts version=130 -profile glslv
// source file: deferred_render_color_normal_depth.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslv
//program vs
//semantic WorldView
//semantic WorldViewProj
//semantic NormalMatrix
//semantic DiffuseColor
//semantic Near
//semantic Far
//var float4x4 WorldView :  : _WorldView[0], 4 : -1 : 1
//var float4x4 WorldViewProj :  : _WorldViewProj[0], 4 : -1 : 1
//var float4x4 NormalMatrix :  : _NormalMatrix[0], 4 : -1 : 1
//var float Far :  : _Far : -1 : 1
//var float4 position : $vin.POSITION : POSITION : 0 : 1
//var float3 normal : $vin.NORMAL : NORMAL : 1 : 1
//var float4 vs.position : $vout.POSITION : HPOS : -1 : 1
//var float3 vs.normal : $vout.TEXCOORD0 : TEXCOORD0 : -1 : 1
//var float vs.linearDepth : $vout.TEXCOORD1 : TEXCOORD1 : -1 : 1
//var float3 vs.viewNormal : $vout.TEXCOORD2 : TEXCOORD2 : -1 : 1

#version 130

struct VOutput {
    vec4 _position2;
    vec3 _normal1;
    float _linearDepth;
    vec3 _viewNormal;
};

struct POutput {
    vec4 _color;
    vec3 _normal2;
    vec4 _depth;
    vec3 _viewNormal1;
};

vec4 _r0009;
vec4 _r0019;
vec4 _r0029;
vec4 _v0029;
in vec4 NORMAL;
uniform vec4 _WorldView[4];
uniform vec4 _WorldViewProj[4];
uniform vec4 _NormalMatrix[4];
uniform float _Far;
in vec4 cg_Vertex;
out vec4 cg_TexCoord1;
out vec4 cg_TexCoord0;
out vec4 cg_TexCoord2;

 // main procedure, the original name was vs
void main()
{

    VOutput _OUT;

    _r0009.x = dot(_WorldViewProj[0], cg_Vertex);
    _r0009.y = dot(_WorldViewProj[1], cg_Vertex);
    _r0009.z = dot(_WorldViewProj[2], cg_Vertex);
    _r0009.w = dot(_WorldViewProj[3], cg_Vertex);
    _r0019.z = dot(_WorldView[2], cg_Vertex);
    _OUT._linearDepth = -_r0019.z/_Far;
    _v0029 = vec4(NORMAL.x, NORMAL.y, NORMAL.z, 1.00000000E+000);
    _r0029.x = dot(_NormalMatrix[0], _v0029);
    _r0029.y = dot(_NormalMatrix[1], _v0029);
    _r0029.z = dot(_NormalMatrix[2], _v0029);
    cg_TexCoord2.xyz = _r0029.xyz;
    cg_TexCoord0.xyz = NORMAL.xyz;
    cg_TexCoord1.x = _OUT._linearDepth;
    gl_Position = _r0009;
    return;
} // main end
