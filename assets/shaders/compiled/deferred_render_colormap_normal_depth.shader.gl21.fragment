// glslf output by Cg compiler
// cgc version 3.1.0013, build date Apr 24 2012
// command line args: -DGL=1 -DGL21=1 -q -profile glslf
// source file: deferred_render_colormap_normal_depth.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslf
//program ps
//semantic WorldView
//semantic WorldViewProj
//semantic NormalMatrix
//semantic ColorMap
//semantic Near
//semantic Far
//var sampler2D ColorMap :  : _ColorMap : -1 : 1
//var float Far :  : _Far : -1 : 1
//var float3 normal : $vin.TEXCOORD0 : TEX0 : 1 : 1
//var float2 texCoord : $vin.TEXCOORD1 : TEX1 : 2 : 1
//var float3 viewNormal : $vin.TEXCOORD2 : TEX2 : 3 : 1
//var float4 viewPosition : $vin.TEXCOORD3 : TEX3 : 4 : 1
//var float4 ps.color : $vout.COLOR0 : COL : -1 : 1
//var float3 ps.normal : $vout.COLOR1 : COL1 : -1 : 1
//var float4 ps.depth : $vout.COLOR2 : COL2 : -1 : 1
//var float3 ps.viewNormal : $vout.COLOR3 : COL3 : -1 : 1

#version 110

#extension GL_ARB_draw_buffers : enable

struct VOutput {
    vec3 _normal2;
    vec2 _texCoord2;
    vec3 _viewNormal2;
    vec4 _viewPosition2;
};

struct POutput {
    vec4 _color;
    vec3 _normal3;
    vec4 _depth;
    vec3 _viewNormal3;
};

vec3 _packedNormal0009;
vec3 _packedNormal0011;
vec4 _enc0015;
uniform sampler2D _ColorMap;
uniform float _Far;

 // main procedure, the original name was ps
void main()
{

    POutput _OUT;
    float _linearDepth;

    _OUT._color = texture2D(_ColorMap, gl_TexCoord[1].xy);
    _packedNormal0009 = gl_TexCoord[0].xyz*5.00000000E-01 + 5.00000000E-01;
    _packedNormal0011 = gl_TexCoord[2].xyz*5.00000000E-01 + 5.00000000E-01;
    _linearDepth = -gl_TexCoord[3].z/_Far;
    _enc0015 = vec4( 1.00000000E+00, 2.55000000E+02, 6.50250000E+04, 1.60581376E+08)*_linearDepth;
    _enc0015 = fract(_enc0015);
    _enc0015 = _enc0015 - _enc0015.yzww*vec4( 3.92156886E-03, 3.92156886E-03, 3.92156886E-03, 0.00000000E+00);
    gl_FragData[3].xyz = _packedNormal0011;
    gl_FragData[1].xyz = _packedNormal0009;
    gl_FragData[2] = _enc0015;
    gl_FragData[0] = _OUT._color;
    return;
} // main end
