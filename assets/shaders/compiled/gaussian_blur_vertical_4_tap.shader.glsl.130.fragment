// glslf output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -DGL=1 -DGL32=1 -q -profileopts version=140 -profile glslf
// source file: gaussian_blur_vertical_4_tap.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslf
//program ps
//semantic SourceMap : TEXUNIT0
//semantic SceneHeight
//semantic offsets
//semantic weights
//var sampler2D SourceMap : TEXUNIT0 : _SourceMap 0 : -1 : 1
//var float SceneHeight :  : _SceneHeight : -1 : 1
//var float offsets[0] :  : _offsets[0] : -1 : 1
//var float offsets[1] :  : _offsets[1] : -1 : 1
//var float offsets[2] :  : _offsets[2] : -1 : 1
//var float offsets[3] :  : _offsets[3] : -1 : 1
//var float weights[0] :  : _weights[0] : -1 : 1
//var float weights[1] :  : _weights[1] : -1 : 1
//var float weights[2] :  : _weights[2] : -1 : 1
//var float weights[3] :  : _weights[3] : -1 : 1
//var float2 centerTap : $vin.TEXCOORD0 : TEXCOORD0 : 1 : 1
//var float4 ps : $vout.COLOR0 : COLOR0 : -1 : 1
//default offsets[0] = 1
//default offsets[1] = 2
//default offsets[2] = 3
//default offsets[3] = 4
//default weights[0] = 0.7978846
//default weights[1] = 0.1079819
//default weights[2] = 0.0002676605
//default weights[3] = 1.22e-08

#version 140

struct VOutput {
    vec2 _centerTap2;
};

vec4 _TMP3;
vec4 _TMP2;
vec4 _TMP1;
uniform sampler2D _SourceMap;
uniform float _SceneHeight;
uniform float _offsets[4];
uniform float _weights[4];
in vec4 cg_TexCoord0;
out vec4 cg_FragColor;

 // main procedure, the original name was ps
void main()
{

    vec4 _color;
    float _texelSize;
    vec2 _offset1;
    vec2 _rightTap1;
    vec2 _leftTap1;

    _TMP1 = texture(_SourceMap, cg_TexCoord0.xy);
    _color = _TMP1*_weights[0];
    _texelSize = 1.00000000E+00/_SceneHeight;
    _offset1 = vec2( 1.00000000E+00, 0.00000000E+00)*_offsets[1]*_texelSize;
    _rightTap1 = cg_TexCoord0.xy + _offset1;
    _TMP2 = texture(_SourceMap, _rightTap1);
    _color = _color + _TMP2*_weights[1];
    _leftTap1 = cg_TexCoord0.xy - _offset1;
    _TMP3 = texture(_SourceMap, _leftTap1);
    _color = _color + _TMP3*_weights[1];
    _offset1 = vec2( 1.00000000E+00, 0.00000000E+00)*_offsets[2]*_texelSize;
    _rightTap1 = cg_TexCoord0.xy + _offset1;
    _TMP2 = texture(_SourceMap, _rightTap1);
    _color = _color + _TMP2*_weights[2];
    _leftTap1 = cg_TexCoord0.xy - _offset1;
    _TMP3 = texture(_SourceMap, _leftTap1);
    _color = _color + _TMP3*_weights[2];
    _offset1 = vec2( 1.00000000E+00, 0.00000000E+00)*_offsets[3]*_texelSize;
    _rightTap1 = cg_TexCoord0.xy + _offset1;
    _TMP2 = texture(_SourceMap, _rightTap1);
    _color = _color + _TMP2*_weights[3];
    _leftTap1 = cg_TexCoord0.xy - _offset1;
    _TMP3 = texture(_SourceMap, _leftTap1);
    _color = _color + _TMP3*_weights[3];
    cg_FragColor = _color;
    return;
} // main end
