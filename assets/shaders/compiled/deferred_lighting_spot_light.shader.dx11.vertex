// vs_4_0 output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -q -profile vs_5_0
// source file: deferred_lighting_spot_light.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile vs_5_0
//program vs
//semantic NormalMap
//semantic DepthMap
//semantic ShadowMap
//semantic ViewPosition
//semantic LightDirection
//semantic LightPosition
//semantic LightColor
//semantic LightInnerAngle
//semantic LightOuterAngle
//semantic LightDecay
//semantic View
//semantic ViewProjInv
//semantic ProjInv
//semantic LightViewProj
//semantic WorldViewProj
//semantic NormalMatrix
//var float4x4 WorldViewProj :  : _WorldViewProj[0], 4 : -1 : 1
//var float4 position : $vin.POSITION : POSITION : 0 : 1
//var float4 vs.position : $vout.POSITION :  : -1 : 1
//var float4 vs.screenPosition : $vout.TEXCOORD0 :  : -1 : 1

#pragma pack_matrix(row_major)

struct VOutput {
    float4 _position1 : POSITION;
    float4 _screenPosition : TEXCOORD0;
};

struct X1X {
    float4 _POSITION : SV_Position;
    float4 _TEXCOORD0 : TEXCOORD0;
};

static float4 _r0001;
static X1X cout;
uniform float4x4 _WorldViewProj;

 // main procedure, the original name was vs
X1X main(in float4 _position : POSITION)
{

    VOutput _OUT;

    _r0001.x = dot(_WorldViewProj._11_12_13_14, _position);
    _r0001.y = dot(_WorldViewProj._21_22_23_24, _position);
    _r0001.z = dot(_WorldViewProj._31_32_33_34, _position);
    _r0001.w = dot(_WorldViewProj._41_42_43_44, _position);
    _OUT._position1 = _r0001;
    _OUT._screenPosition = _r0001;
    cout._POSITION = _OUT._position1;
    cout._TEXCOORD0 = _OUT._screenPosition;
    return cout;
} // main end
