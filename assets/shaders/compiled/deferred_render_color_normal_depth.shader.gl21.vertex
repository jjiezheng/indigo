// glslv output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -DGL21=1 -q -profile glslv
// source file: deferred_render_color_normal_depth.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslv
//program vs
//semantic WorldViewProj
//semantic DiffuseColor
//var float4x4 WorldViewProj :  : _WorldViewProj[0], 4 : -1 : 1
//var float4 position : $vin.POSITION : ATTR0 : 0 : 1
//var float3 normal : $vin.NORMAL : ATTR2 : 1 : 1
//var float4 vs.position : $vout.POSITION : HPOS : -1 : 1
//var float3 vs.normal : $vout.TEXCOORD0 : TEX0 : -1 : 1

#version 110

struct VOutput {
    vec4 _position2;
    vec3 _normal2;
};

struct POutput {
    vec4 _color;
    vec4 _normal3;
};

vec3 _normal1;
vec4 _position1;
vec4 _r0004;
vec4 _v0004;
uniform vec4 _WorldViewProj[4];

 // main procedure, the original name was vs
void main()
{

    VOutput _OUT;

    _normal1 = vec3(float(gl_Normal.x), float(gl_Normal.y), float(gl_Normal.z));
    _position1 = vec4(float(gl_Vertex.x), float(gl_Vertex.y), float(gl_Vertex.z), float(gl_Vertex.w));
    _v0004 = vec4(float(_position1.x), float(_position1.y), float(_position1.z), float(_position1.w));
    _r0004.x = dot(_WorldViewProj[0], _v0004);
    _r0004.y = dot(_WorldViewProj[1], _v0004);
    _r0004.z = dot(_WorldViewProj[2], _v0004);
    _r0004.w = dot(_WorldViewProj[3], _v0004);
    _OUT._position2 = vec4(float(_r0004.x), float(_r0004.y), float(_r0004.z), float(_r0004.w));
    gl_TexCoord[0].xyz = vec3(float(_normal1.x), float(_normal1.y), float(_normal1.z));
    gl_Position = vec4(float(_OUT._position2.x), float(_OUT._position2.y), float(_OUT._position2.z), float(_OUT._position2.w));
    return;
} // main end
