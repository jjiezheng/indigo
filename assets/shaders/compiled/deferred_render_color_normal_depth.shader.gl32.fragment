// glslf output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -DGL32=1 -q -profileopts version=150 -profile glslf
// source file: deferred_render_color_normal_depth.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslf
//program ps
//semantic WorldViewProj
//semantic DiffuseColor
//var float4 DiffuseColor :  : _DiffuseColor : -1 : 1
//var float3 normal : $vin.TEXCOORD0 : TEXCOORD0 : 1 : 1
//var float4 ps.color : $vout.COLOR0 : COLOR0 : -1 : 1
//var float4 ps.normal : $vout.COLOR1 : COLOR1 : -1 : 1

#version 150

#extension GL_ARB_draw_buffers : enable

struct VOutput {
    vec3 _normal2;
};

struct POutput {
    vec4 _color;
    vec4 _normal3;
};

vec3 _TMP0;
vec3 _normal1;
vec3 _unPackedNormal0005;
uniform vec4 _DiffuseColor;
in vec4 cg_TexCoord0;
out vec4 cg_FragColor;
out vec4 cg_FragData1;

 // main procedure, the original name was ps
void main()
{

    POutput _OUT;

    _normal1 = vec3(float(cg_TexCoord0.x), float(cg_TexCoord0.y), float(cg_TexCoord0.z));
    _OUT._color = vec4(float(_DiffuseColor.x), float(_DiffuseColor.y), float(_DiffuseColor.z), float(_DiffuseColor.w));
    _unPackedNormal0005 = vec3(float(_normal1.x), float(_normal1.y), float(_normal1.z));
    _TMP0 = 5.00000000E-01 + _unPackedNormal0005*5.00000000E-01;
    _OUT._normal3 = vec4(float(_TMP0.x), float(_TMP0.y), float(_TMP0.z), 1.00000000E+00);
    cg_FragData1 = vec4(float(_OUT._normal3.x), float(_OUT._normal3.y), float(_OUT._normal3.z), float(_OUT._normal3.w));
    cg_FragColor = vec4(float(_OUT._color.x), float(_OUT._color.y), float(_OUT._color.z), float(_OUT._color.w));
    return;
} // main end
