// ps_4_0 output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -DDX11=1 -q -unroll all -profile ps_5_0
// source file: deferred_render_color_normal_depth.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile ps_5_0
//program ps
//semantic WorldView
//semantic WorldViewProj
//semantic NormalMatrix
//semantic DiffuseColor
//semantic Near
//semantic Far
//var float4 DiffuseColor :  : _DiffuseColor : -1 : 1
//var float Far :  : _Far : -1 : 1
//var float3 normal : $vin.TEXCOORD0 :  : 1 : 1
//var float3 viewNormal : $vin.TEXCOORD1 :  : 2 : 1
//var float4 viewPosition : $vin.TEXCOORD2 :  : 3 : 1
//var float4 ps.color : $vout.COLOR0 : COLOR0 : -1 : 1
//var float3 ps.normal : $vout.COLOR1 : COLOR1 : -1 : 1
//var float4 ps.depth : $vout.COLOR2 : COLOR2 : -1 : 1
//var float3 ps.viewNormal : $vout.COLOR3 : COLOR3 : -1 : 1

#pragma pack_matrix(row_major)

struct VOutput {
    float4 _position1 : SV_Position;
    float3 _normal2 : TEXCOORD0;
    float3 _viewNormal2 : TEXCOORD1;
    float4 _viewPosition1 : TEXCOORD2;
};

struct POutput {
    float4 _color : SV_Target0;
    float3 _normal : SV_Target1;
    float4 _depth : SV_Target2;
    float3 _viewNormal : SV_Target3;
};

struct X1X {
    float4 _POSITION : SV_Position;
    float3 _TEXCOORD0 : TEXCOORD0;
    float3 _TEXCOORD1 : TEXCOORD1;
    float4 _TEXCOORD2 : TEXCOORD2;
};

static float3 _packedNormal0001;
static float3 _packedNormal0003;
static float4 _enc0007;
uniform float4 _DiffuseColor;
float _Far;

 // main procedure, the original name was ps
POutput main( in X1X cin)
{

    float3 _normal1;
    float3 _viewNormal1;
    float4 _viewPosition;
    POutput _OUT;
    float _linearDepth;

    _normal1 = cin._TEXCOORD0;
    _viewNormal1 = cin._TEXCOORD1;
    _viewPosition = cin._TEXCOORD2;
    _OUT._color = _DiffuseColor;
    _packedNormal0001 = _normal1* 5.00000000000000000E-001f +  5.00000000000000000E-001f;
    _OUT._normal = _packedNormal0001;
    _packedNormal0003 = _viewNormal1* 5.00000000000000000E-001f +  5.00000000000000000E-001f;
    _OUT._viewNormal = _packedNormal0003;
    _linearDepth = -_viewPosition.z/_Far;
    _enc0007 = float4(  1.00000000000000000E000f,  2.55000000000000000E002f,  6.50250000000000000E004f,  1.60581376000000000E008f)*_linearDepth;
    _enc0007 = frac(_enc0007);
    _enc0007 = _enc0007 - _enc0007.yzww*float4(  3.92156885936856270E-003f,  3.92156885936856270E-003f,  3.92156885936856270E-003f,  0.00000000000000000E000f);
    _OUT._depth = _enc0007;
    return _OUT;
} // main end
