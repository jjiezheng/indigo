// glslf output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -DGL=1 -DGL21=1 -q -profile glslf
// source file: gaussian_blur_horizontal_16_tap.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslf
//program ps
//semantic SourceMap : TEXUNIT0
//semantic SceneWidth
//var sampler2D SourceMap : TEXUNIT0 : _SourceMap 0 : -1 : 1
//var float SceneWidth :  : _SceneWidth : -1 : 1
//var float2 centerTap : $vin.TEXCOORD0 : TEX0 : 1 : 1
//var float4 ps : $vout.COLOR0 : COL : -1 : 1

#version 110

struct VOutput {
    vec2 _centerTap2;
};

vec4 _TMP3;
vec4 _TMP2;
vec4 _TMP1;
uniform sampler2D _SourceMap;
uniform float _SceneWidth;

 // main procedure, the original name was ps
void main()
{

    vec4 _color;
    float _texelSize;
    vec2 _offset1;
    vec2 _rightTap1;
    vec2 _leftTap1;

    _TMP1 = texture2D(_SourceMap, gl_TexCoord[0].xy);
    _color = _TMP1*2.65961528E-001;
    _texelSize = 1.00000000E+000/_SceneWidth;
    _offset1 = vec2( 2.00000000E+000, 0.00000000E+000)*_texelSize;
    _rightTap1 = gl_TexCoord[0].xy + _offset1;
    _TMP2 = texture2D(_SourceMap, _rightTap1);
    _color = _color + _TMP2*2.12965339E-001;
    _leftTap1 = gl_TexCoord[0].xy - _offset1;
    _TMP3 = texture2D(_SourceMap, _leftTap1);
    _color = _color + _TMP3*2.12965339E-001;
    _offset1 = vec2( 3.00000000E+000, 0.00000000E+000)*_texelSize;
    _rightTap1 = gl_TexCoord[0].xy + _offset1;
    _TMP2 = texture2D(_SourceMap, _rightTap1);
    _color = _color + _TMP2*1.09340049E-001;
    _leftTap1 = gl_TexCoord[0].xy - _offset1;
    _TMP3 = texture2D(_SourceMap, _leftTap1);
    _color = _color + _TMP3*1.09340049E-001;
    _offset1 = vec2( 4.00000000E+000, 0.00000000E+000)*_texelSize;
    _rightTap1 = gl_TexCoord[0].xy + _offset1;
    _TMP2 = texture2D(_SourceMap, _rightTap1);
    _color = _color + _TMP2*3.59939784E-002;
    _leftTap1 = gl_TexCoord[0].xy - _offset1;
    _TMP3 = texture2D(_SourceMap, _leftTap1);
    _color = _color + _TMP3*3.59939784E-002;
    _offset1 = vec2( 5.00000000E+000, 0.00000000E+000)*_texelSize;
    _rightTap1 = gl_TexCoord[0].xy + _offset1;
    _TMP2 = texture2D(_SourceMap, _rightTap1);
    _color = _color + _TMP2*7.59732397E-003;
    _leftTap1 = gl_TexCoord[0].xy - _offset1;
    _TMP3 = texture2D(_SourceMap, _leftTap1);
    _color = _color + _TMP3*7.59732397E-003;
    _offset1 = vec2( 6.00000000E+000, 0.00000000E+000)*_texelSize;
    _rightTap1 = gl_TexCoord[0].xy + _offset1;
    _TMP2 = texture2D(_SourceMap, _rightTap1);
    _color = _color + _TMP2*1.02818594E-003;
    _leftTap1 = gl_TexCoord[0].xy - _offset1;
    _TMP3 = texture2D(_SourceMap, _leftTap1);
    _color = _color + _TMP3*1.02818594E-003;
    _offset1 = vec2( 7.00000000E+000, 0.00000000E+000)*_texelSize;
    _rightTap1 = gl_TexCoord[0].xy + _offset1;
    _TMP2 = texture2D(_SourceMap, _rightTap1);
    _color = _color + _TMP2*8.92202006E-005;
    _leftTap1 = gl_TexCoord[0].xy - _offset1;
    _TMP3 = texture2D(_SourceMap, _leftTap1);
    _color = _color + _TMP3*8.92202006E-005;
    _offset1 = vec2( 8.00000000E+000, 0.00000000E+000)*_texelSize;
    _rightTap1 = gl_TexCoord[0].xy + _offset1;
    _TMP2 = texture2D(_SourceMap, _rightTap1);
    _color = _color + _TMP2*4.96399980E-006;
    _leftTap1 = gl_TexCoord[0].xy - _offset1;
    _TMP3 = texture2D(_SourceMap, _leftTap1);
    _color = _color + _TMP3*4.96399980E-006;
    gl_FragColor = _color;
    return;
} // main end
