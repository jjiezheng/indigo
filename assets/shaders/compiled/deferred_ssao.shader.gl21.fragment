// glslf output by Cg compiler
// cgc version 3.1.0013, build date Apr 24 2012
// command line args: -DGL=1 -DGL21=1 -q -profile glslf
// source file: deferred_ssao.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslf
//program ps
//semantic HalfPixel
//semantic Radius
//semantic NoiseScale
//semantic Kernel
//semantic Far
//semantic Near
//semantic NoiseMap : TEXUNIT0
//semantic NormalMap : TEXUNIT1
//semantic LinearDepthMap : TEXUNIT2
//semantic DepthMap : TEXUNIT3
//semantic Projection
//semantic ProjInv
//semantic View
//var sampler2D LinearDepthMap : TEXUNIT2 : _LinearDepthMap 2 : -1 : 1
//var float4x4 ProjInv :  : _ProjInv[0], 4 : -1 : 1
//var float2 texCoord : $vin.TEXCOORD0 : TEX0 : 1 : 1
//var float4 ps : $vout.COLOR0 : COL : -1 : 1

#version 110

struct VOutput {
    vec2 _texCoord4;
};

vec4 _TMP1;
vec4 _positionScreen0041;
float _depth0041;
vec4 _r0043;
uniform sampler2D _LinearDepthMap;
uniform vec4 _ProjInv[4];

 // main procedure, the original name was ps
void main()
{

    vec4 _positionView;

    _TMP1 = texture2D(_LinearDepthMap, gl_TexCoord[0].xy);
    _depth0041 = -_TMP1.x;
    _positionScreen0041.xy = gl_TexCoord[0].xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0041.z = _depth0041;
    _positionScreen0041.w = 1.00000000E+00;
    _r0043.x = dot(_ProjInv[0], _positionScreen0041);
    _r0043.y = dot(_ProjInv[1], _positionScreen0041);
    _r0043.z = dot(_ProjInv[2], _positionScreen0041);
    _r0043.w = dot(_ProjInv[3], _positionScreen0041);
    _positionView = _r0043/_r0043.w;
    gl_FragColor = _positionView;
    return;
} // main end
