// glslf output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -DGL21=1 -q -profile glslf
// source file: deferred_ssao.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslf
//program ps
//semantic Radius
//semantic NoiseScale
//semantic Kernel
//semantic Far
//semantic Near
//semantic NoiseMap : TEXUNIT0
//semantic NormalMap : TEXUNIT1
//semantic LinearDepthMap : TEXUNIT2
//semantic DepthMap : TEXUNIT3
//semantic Projection
//semantic ProjInv
//semantic View
//var float2 NoiseScale :  : _NoiseScale : -1 : 1
//var float4 Kernel[0] :  : _Kernel[0] : -1 : 1
//var float4 Kernel[1] :  : _Kernel[1] : -1 : 1
//var float4 Kernel[2] :  : _Kernel[2] : -1 : 1
//var float4 Kernel[3] :  : _Kernel[3] : -1 : 1
//var float4 Kernel[4] :  : _Kernel[4] : -1 : 1
//var float4 Kernel[5] :  : _Kernel[5] : -1 : 1
//var float4 Kernel[6] :  : _Kernel[6] : -1 : 1
//var float4 Kernel[7] :  : _Kernel[7] : -1 : 1
//var float4 Kernel[8] :  : _Kernel[8] : -1 : 1
//var float4 Kernel[9] :  : _Kernel[9] : -1 : 1
//var float4 Kernel[10] :  : _Kernel[10] : -1 : 1
//var float4 Kernel[11] :  : _Kernel[11] : -1 : 1
//var float4 Kernel[12] :  : _Kernel[12] : -1 : 1
//var float4 Kernel[13] :  : _Kernel[13] : -1 : 1
//var float4 Kernel[14] :  : _Kernel[14] : -1 : 1
//var float4 Kernel[15] :  : _Kernel[15] : -1 : 1
//var float Far :  : _Far : -1 : 1
//var float Near :  : _Near : -1 : 1
//var sampler2D NoiseMap : TEXUNIT0 : _NoiseMap 0 : -1 : 1
//var sampler2D NormalMap : TEXUNIT1 : _NormalMap 1 : -1 : 1
//var sampler2D LinearDepthMap : TEXUNIT2 : _LinearDepthMap 2 : -1 : 1
//var sampler2D DepthMap : TEXUNIT3 : _DepthMap 3 : -1 : 1
//var float4x4 Projection :  : _Projection[0], 4 : -1 : 1
//var float4x4 ProjInv :  : _ProjInv[0], 4 : -1 : 1
//var float4x4 View :  : _View[0], 4 : -1 : 1
//var float2 texCoord : $vin.TEXCOORD0 : TEX0 : 1 : 1
//var float4 ps : $vout.COLOR0 : COL : -1 : 1

#version 110

struct VOutput {
    vec2 _texCoord5;
};

vec4 _ret_0;
float _TMP6;
float _TMP4;
float _TMP5;
vec4 _TMP10;
float _TMP3;
float _TMP8;
float _TMP7;
vec4 _TMP2;
vec4 _TMP9;
vec4 _normalData0027;
vec4 _unPackedNormal0027;
vec4 _r0031;
vec4 _v0031;
float _TMP54;
vec4 _r0059;
vec3 _v0073;
vec3 _r0081;
vec4 _r0083;
vec4 _v0083;
float _TMP96;
float _a0101;
uniform vec2 _NoiseScale;
uniform vec4 _Kernel[16];
uniform float _Far;
uniform float _Near;
uniform sampler2D _NoiseMap;
uniform sampler2D _NormalMap;
uniform sampler2D _LinearDepthMap;
uniform sampler2D _DepthMap;
uniform vec4 _Projection[4];
uniform vec4 _ProjInv[4];
uniform vec4 _View[4];

 // main procedure, the original name was ps
void main()
{

    vec3 _normal;
    vec4 _positionScreen;
    vec4 _positionView;
    vec2 _noiseTexCoords;
    vec3 _tangent;
    vec3 _bitangent;
    float _occlusionContribution;
    vec3 _sample1;
    vec3 _sampleAtViewPosition1;
    float _sampleAtViewPositionZ1;
    vec4 _sampleScreen1;
    vec2 _sampleTexCoord1;
    float _rangeCheck1;
    float _occlusion;

    _normalData0027 = texture2D(_NormalMap, gl_TexCoord[0].xy);
    _unPackedNormal0027 = _normalData0027*2.00000000E+000 - 1.00000000E+000;
    _v0031 = vec4(_unPackedNormal0027.x, _unPackedNormal0027.y, _unPackedNormal0027.z, 0.00000000E+000);
    _r0031.x = dot(_View[0], _v0031);
    _r0031.y = dot(_View[1], _v0031);
    _r0031.z = dot(_View[2], _v0031);
    _TMP7 = dot(_r0031.xyz, _r0031.xyz);
    _TMP8 = inversesqrt(_TMP7);
    _normal = _TMP8*_r0031.xyz;
    _TMP9 = texture2D(_DepthMap, gl_TexCoord[0].xy);
    _TMP10 = texture2D(_LinearDepthMap, gl_TexCoord[0].xy);
    _TMP54 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _positionScreen.xy = gl_TexCoord[0].xy*2.00000000E+000 - 1.00000000E+000;
    _positionScreen.y = -_positionScreen.y;
    _positionScreen.z = _TMP9.x;
    _positionScreen.w = 1.00000000E+000;
    _r0059.x = dot(_ProjInv[0], _positionScreen);
    _r0059.y = dot(_ProjInv[1], _positionScreen);
    _r0059.z = dot(_ProjInv[2], _positionScreen);
    _r0059.w = dot(_ProjInv[3], _positionScreen);
    _positionView = _r0059/_r0059.w;
    _noiseTexCoords = gl_TexCoord[0].xy*_NoiseScale;
    _TMP2 = texture2D(_NoiseMap, _noiseTexCoords);
    _TMP3 = dot(_TMP2.xyz, _normal);
    _v0073 = _TMP2.xyz - _normal*_TMP3;
    _TMP7 = dot(_v0073, _v0073);
    _TMP8 = inversesqrt(_TMP7);
    _tangent = _TMP8*_v0073;
    _bitangent = _tangent.yzx*_normal.zxy - _tangent.zxy*_normal.yzx;
    _sample1 = _Kernel[0].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = float(_TMP6)*_rangeCheck1;
    _sample1 = _Kernel[1].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + float(_TMP6)*_rangeCheck1;
    _sample1 = _Kernel[2].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + float(_TMP6)*_rangeCheck1;
    _sample1 = _Kernel[3].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + float(_TMP6)*_rangeCheck1;
    _sample1 = _Kernel[4].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + float(_TMP6)*_rangeCheck1;
    _sample1 = _Kernel[5].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + float(_TMP6)*_rangeCheck1;
    _sample1 = _Kernel[6].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + float(_TMP6)*_rangeCheck1;
    _sample1 = _Kernel[7].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + float(_TMP6)*_rangeCheck1;
    _sample1 = _Kernel[8].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + float(_TMP6)*_rangeCheck1;
    _sample1 = _Kernel[9].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + float(_TMP6)*_rangeCheck1;
    _sample1 = _Kernel[10].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + float(_TMP6)*_rangeCheck1;
    _sample1 = _Kernel[11].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + float(_TMP6)*_rangeCheck1;
    _sample1 = _Kernel[12].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + float(_TMP6)*_rangeCheck1;
    _sample1 = _Kernel[13].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + float(_TMP6)*_rangeCheck1;
    _sample1 = _Kernel[14].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + float(_TMP6)*_rangeCheck1;
    _sample1 = _Kernel[15].xyz*2.00000003E-001;
    _r0081 = _sample1.x*_tangent;
    _r0081 = _r0081 + _sample1.y*_bitangent;
    _r0081 = _r0081 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0081;
    _sampleAtViewPositionZ1 = (-_sampleAtViewPosition1.z - _Near)/(_Far - _Near);
    _v0083 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0083.x = dot(_Projection[0], _v0083);
    _r0083.y = dot(_Projection[1], _v0083);
    _r0083.z = dot(_Projection[2], _v0083);
    _r0083.w = dot(_Projection[3], _v0083);
    _sampleScreen1 = _r0083/_r0083.w;
    _sampleTexCoord1 = _sampleScreen1.xy*5.00000000E-001 + 5.00000000E-001;
    _sampleTexCoord1.y = 1.00000000E+000 - _sampleTexCoord1.y;
    _TMP10 = texture2D(_LinearDepthMap, _sampleTexCoord1);
    _TMP96 = dot(_TMP10.xyz, vec3( 9.96093810E-001, 3.89099144E-003, 1.51991853E-005));
    _a0101 = _TMP54 - _TMP96;
    _TMP5 = abs(_a0101);
    if (_TMP5 < 2.00000003E-001) { // if begin
        _TMP4 = 1.00000000E+000;
    } else {
        _TMP4 = 0.00000000E+000;
    } // end if
    _rangeCheck1 = float(_TMP4);
    if (_TMP96 <= _sampleAtViewPositionZ1 - 4.99999987E-006) { // if begin
        _TMP6 = 1.29999995E+000;
    } else {
        _TMP6 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + float(_TMP6)*_rangeCheck1;
    _occlusion = 1.00000000E+000 - _occlusionContribution/1.60000000E+001;
    _ret_0 = vec4(_occlusion, _occlusion, _occlusion, 1.00000000E+000);
    gl_FragColor = _ret_0;
    return;
} // main end
