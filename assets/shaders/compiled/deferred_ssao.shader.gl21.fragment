// glslf output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -DGL=1 -DGL21=1 -q -profile glslf
// source file: deferred_ssao.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslf
//program ps
//semantic HalfPixel
//semantic Radius
//semantic NoiseScale
//semantic Kernel
//semantic Far
//semantic Near
//semantic NormalMap : TEXUNIT0
//semantic PositionMap : TEXUNIT1
//semantic NoiseMap : TEXUNIT2
//var float Radius :  : _Radius : -1 : 1
//var float2 NoiseScale :  : _NoiseScale : -1 : 1
//var sampler2D NormalMap : TEXUNIT0 : _NormalMap 0 : -1 : 1
//var sampler2D PositionMap : TEXUNIT1 : _PositionMap 1 : -1 : 1
//var sampler2D NoiseMap : TEXUNIT2 : _NoiseMap 2 : -1 : 1
//var float2 texCoord : $vin.TEXCOORD0 : TEX0 : 1 : 1
//var float4 ps : $vout.COLOR0 : COL : -1 : 1

#version 110

struct VOutput {
    vec2 _texCoord3;
};

vec4 _ret_0;
float _TMP10;
float _TMP12;
float _TMP11;
vec2 _TMP4;
float _TMP9;
float _TMP3;
vec4 _TMP2;
vec4 _TMP1;
vec2 _c0028;
float _TMP35;
vec4 _samplePositionVS0036;
vec2 _sampleOffset0036;
vec3 _diff0036;
vec3 _v0036;
float _d0036;
float _occlusion10036;
vec2 _c0038;
float _b0050;
float _TMP51;
vec4 _samplePositionVS0052;
vec2 _sampleOffset0052;
vec3 _diff0052;
vec3 _v0052;
float _d0052;
float _occlusion10052;
vec2 _c0054;
float _b0066;
float _TMP67;
vec4 _samplePositionVS0068;
vec2 _sampleOffset0068;
vec3 _diff0068;
vec3 _v0068;
float _d0068;
float _occlusion10068;
vec2 _c0070;
float _b0082;
float _TMP83;
vec4 _samplePositionVS0084;
vec3 _diff0084;
vec3 _v0084;
float _d0084;
float _occlusion10084;
vec2 _c0086;
float _b0098;
uniform float _Radius;
uniform vec2 _NoiseScale;
uniform sampler2D _NormalMap;
uniform sampler2D _PositionMap;
uniform sampler2D _NoiseMap;

 // main procedure, the original name was ps
void main()
{

    vec4 _positionVS1;
    vec3 _random;
    float _rad;
    float _occlusion;
    vec2 _sampleOffset1;
    vec2 _coord21;

    _positionVS1 = texture2D(_PositionMap, gl_TexCoord[0].xy);
    _TMP1 = texture2D(_NormalMap, gl_TexCoord[0].xy);
    _c0028 = gl_TexCoord[0].xy*_NoiseScale;
    _TMP2 = texture2D(_NoiseMap, _c0028);
    _random = _TMP2.xyz*2.00000000E+000 - 1.00000000E+000;
    _TMP3 = abs(_positionVS1.z);
    _rad = _Radius/_TMP3;
    _TMP9 = dot(_random.xy, vec2( 1.00000000E+000, 0.00000000E+000));
    _TMP4 = vec2( 1.00000000E+000, 0.00000000E+000) - (2.00000000E+000*_random.xy)*_TMP9;
    _sampleOffset1 = _TMP4*_rad;
    _coord21 = vec2(_sampleOffset1.x*7.07000017E-001 - _sampleOffset1.y*7.07000017E-001, _sampleOffset1.x*7.07000017E-001 + _sampleOffset1.y*7.07000017E-001);
    _sampleOffset0036 = _sampleOffset1*2.50000000E-001;
    _c0038 = gl_TexCoord[0].xy + _sampleOffset0036;
    _samplePositionVS0036 = texture2D(_PositionMap, _c0038);
    _diff0036 = _samplePositionVS0036.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0036, _diff0036);
    _TMP12 = inversesqrt(_TMP11);
    _v0036 = _TMP12*_diff0036;
    _d0036 = length(_diff0036);
    if (_d0036 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0036);
        _b0050 = _TMP10*(1.00000000E+000 + _d0036);
        _occlusion10036 = max(0.00000000E+000, _b0050);
        _TMP35 = _occlusion10036;
    } else {
        _TMP35 = 0.00000000E+000;
    } // end if
    _sampleOffset0052 = _coord21*5.00000000E-001;
    _c0054 = gl_TexCoord[0].xy + _sampleOffset0052;
    _samplePositionVS0052 = texture2D(_PositionMap, _c0054);
    _diff0052 = _samplePositionVS0052.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0052, _diff0052);
    _TMP12 = inversesqrt(_TMP11);
    _v0052 = _TMP12*_diff0052;
    _d0052 = length(_diff0052);
    if (_d0052 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0052);
        _b0066 = _TMP10*(1.00000000E+000 + _d0052);
        _occlusion10052 = max(0.00000000E+000, _b0066);
        _TMP51 = _occlusion10052;
    } else {
        _TMP51 = 0.00000000E+000;
    } // end if
    _occlusion = _TMP35 + _TMP51;
    _sampleOffset0068 = _sampleOffset1*7.50000000E-001;
    _c0070 = gl_TexCoord[0].xy + _sampleOffset0068;
    _samplePositionVS0068 = texture2D(_PositionMap, _c0070);
    _diff0068 = _samplePositionVS0068.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0068, _diff0068);
    _TMP12 = inversesqrt(_TMP11);
    _v0068 = _TMP12*_diff0068;
    _d0068 = length(_diff0068);
    if (_d0068 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0068);
        _b0082 = _TMP10*(1.00000000E+000 + _d0068);
        _occlusion10068 = max(0.00000000E+000, _b0082);
        _TMP67 = _occlusion10068;
    } else {
        _TMP67 = 0.00000000E+000;
    } // end if
    _occlusion = _occlusion + _TMP67;
    _c0086 = gl_TexCoord[0].xy + _coord21;
    _samplePositionVS0084 = texture2D(_PositionMap, _c0086);
    _diff0084 = _samplePositionVS0084.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0084, _diff0084);
    _TMP12 = inversesqrt(_TMP11);
    _v0084 = _TMP12*_diff0084;
    _d0084 = length(_diff0084);
    if (_d0084 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0084);
        _b0098 = _TMP10*(1.00000000E+000 + _d0084);
        _occlusion10084 = max(0.00000000E+000, _b0098);
        _TMP83 = _occlusion10084;
    } else {
        _TMP83 = 0.00000000E+000;
    } // end if
    _occlusion = _occlusion + _TMP83;
    _TMP9 = dot(_random.xy, vec2( -1.00000000E+000, 0.00000000E+000));
    _TMP4 = vec2( -1.00000000E+000, 0.00000000E+000) - (2.00000000E+000*_random.xy)*_TMP9;
    _sampleOffset1 = _TMP4*_rad;
    _coord21 = vec2(_sampleOffset1.x*7.07000017E-001 - _sampleOffset1.y*7.07000017E-001, _sampleOffset1.x*7.07000017E-001 + _sampleOffset1.y*7.07000017E-001);
    _sampleOffset0036 = _sampleOffset1*2.50000000E-001;
    _c0038 = gl_TexCoord[0].xy + _sampleOffset0036;
    _samplePositionVS0036 = texture2D(_PositionMap, _c0038);
    _diff0036 = _samplePositionVS0036.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0036, _diff0036);
    _TMP12 = inversesqrt(_TMP11);
    _v0036 = _TMP12*_diff0036;
    _d0036 = length(_diff0036);
    if (_d0036 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0036);
        _b0050 = _TMP10*(1.00000000E+000 + _d0036);
        _occlusion10036 = max(0.00000000E+000, _b0050);
        _TMP35 = _occlusion10036;
    } else {
        _TMP35 = 0.00000000E+000;
    } // end if
    _occlusion = _occlusion + _TMP35;
    _sampleOffset0052 = _coord21*5.00000000E-001;
    _c0054 = gl_TexCoord[0].xy + _sampleOffset0052;
    _samplePositionVS0052 = texture2D(_PositionMap, _c0054);
    _diff0052 = _samplePositionVS0052.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0052, _diff0052);
    _TMP12 = inversesqrt(_TMP11);
    _v0052 = _TMP12*_diff0052;
    _d0052 = length(_diff0052);
    if (_d0052 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0052);
        _b0066 = _TMP10*(1.00000000E+000 + _d0052);
        _occlusion10052 = max(0.00000000E+000, _b0066);
        _TMP51 = _occlusion10052;
    } else {
        _TMP51 = 0.00000000E+000;
    } // end if
    _occlusion = _occlusion + _TMP51;
    _sampleOffset0068 = _sampleOffset1*7.50000000E-001;
    _c0070 = gl_TexCoord[0].xy + _sampleOffset0068;
    _samplePositionVS0068 = texture2D(_PositionMap, _c0070);
    _diff0068 = _samplePositionVS0068.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0068, _diff0068);
    _TMP12 = inversesqrt(_TMP11);
    _v0068 = _TMP12*_diff0068;
    _d0068 = length(_diff0068);
    if (_d0068 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0068);
        _b0082 = _TMP10*(1.00000000E+000 + _d0068);
        _occlusion10068 = max(0.00000000E+000, _b0082);
        _TMP67 = _occlusion10068;
    } else {
        _TMP67 = 0.00000000E+000;
    } // end if
    _occlusion = _occlusion + _TMP67;
    _c0086 = gl_TexCoord[0].xy + _coord21;
    _samplePositionVS0084 = texture2D(_PositionMap, _c0086);
    _diff0084 = _samplePositionVS0084.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0084, _diff0084);
    _TMP12 = inversesqrt(_TMP11);
    _v0084 = _TMP12*_diff0084;
    _d0084 = length(_diff0084);
    if (_d0084 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0084);
        _b0098 = _TMP10*(1.00000000E+000 + _d0084);
        _occlusion10084 = max(0.00000000E+000, _b0098);
        _TMP83 = _occlusion10084;
    } else {
        _TMP83 = 0.00000000E+000;
    } // end if
    _occlusion = _occlusion + _TMP83;
    _TMP9 = dot(_random.xy, vec2( 0.00000000E+000, 1.00000000E+000));
    _TMP4 = vec2( 0.00000000E+000, 1.00000000E+000) - (2.00000000E+000*_random.xy)*_TMP9;
    _sampleOffset1 = _TMP4*_rad;
    _coord21 = vec2(_sampleOffset1.x*7.07000017E-001 - _sampleOffset1.y*7.07000017E-001, _sampleOffset1.x*7.07000017E-001 + _sampleOffset1.y*7.07000017E-001);
    _sampleOffset0036 = _sampleOffset1*2.50000000E-001;
    _c0038 = gl_TexCoord[0].xy + _sampleOffset0036;
    _samplePositionVS0036 = texture2D(_PositionMap, _c0038);
    _diff0036 = _samplePositionVS0036.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0036, _diff0036);
    _TMP12 = inversesqrt(_TMP11);
    _v0036 = _TMP12*_diff0036;
    _d0036 = length(_diff0036);
    if (_d0036 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0036);
        _b0050 = _TMP10*(1.00000000E+000 + _d0036);
        _occlusion10036 = max(0.00000000E+000, _b0050);
        _TMP35 = _occlusion10036;
    } else {
        _TMP35 = 0.00000000E+000;
    } // end if
    _occlusion = _occlusion + _TMP35;
    _sampleOffset0052 = _coord21*5.00000000E-001;
    _c0054 = gl_TexCoord[0].xy + _sampleOffset0052;
    _samplePositionVS0052 = texture2D(_PositionMap, _c0054);
    _diff0052 = _samplePositionVS0052.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0052, _diff0052);
    _TMP12 = inversesqrt(_TMP11);
    _v0052 = _TMP12*_diff0052;
    _d0052 = length(_diff0052);
    if (_d0052 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0052);
        _b0066 = _TMP10*(1.00000000E+000 + _d0052);
        _occlusion10052 = max(0.00000000E+000, _b0066);
        _TMP51 = _occlusion10052;
    } else {
        _TMP51 = 0.00000000E+000;
    } // end if
    _occlusion = _occlusion + _TMP51;
    _sampleOffset0068 = _sampleOffset1*7.50000000E-001;
    _c0070 = gl_TexCoord[0].xy + _sampleOffset0068;
    _samplePositionVS0068 = texture2D(_PositionMap, _c0070);
    _diff0068 = _samplePositionVS0068.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0068, _diff0068);
    _TMP12 = inversesqrt(_TMP11);
    _v0068 = _TMP12*_diff0068;
    _d0068 = length(_diff0068);
    if (_d0068 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0068);
        _b0082 = _TMP10*(1.00000000E+000 + _d0068);
        _occlusion10068 = max(0.00000000E+000, _b0082);
        _TMP67 = _occlusion10068;
    } else {
        _TMP67 = 0.00000000E+000;
    } // end if
    _occlusion = _occlusion + _TMP67;
    _c0086 = gl_TexCoord[0].xy + _coord21;
    _samplePositionVS0084 = texture2D(_PositionMap, _c0086);
    _diff0084 = _samplePositionVS0084.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0084, _diff0084);
    _TMP12 = inversesqrt(_TMP11);
    _v0084 = _TMP12*_diff0084;
    _d0084 = length(_diff0084);
    if (_d0084 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0084);
        _b0098 = _TMP10*(1.00000000E+000 + _d0084);
        _occlusion10084 = max(0.00000000E+000, _b0098);
        _TMP83 = _occlusion10084;
    } else {
        _TMP83 = 0.00000000E+000;
    } // end if
    _occlusion = _occlusion + _TMP83;
    _TMP9 = dot(_random.xy, vec2( 0.00000000E+000, -1.00000000E+000));
    _TMP4 = vec2( 0.00000000E+000, -1.00000000E+000) - (2.00000000E+000*_random.xy)*_TMP9;
    _sampleOffset1 = _TMP4*_rad;
    _coord21 = vec2(_sampleOffset1.x*7.07000017E-001 - _sampleOffset1.y*7.07000017E-001, _sampleOffset1.x*7.07000017E-001 + _sampleOffset1.y*7.07000017E-001);
    _sampleOffset0036 = _sampleOffset1*2.50000000E-001;
    _c0038 = gl_TexCoord[0].xy + _sampleOffset0036;
    _samplePositionVS0036 = texture2D(_PositionMap, _c0038);
    _diff0036 = _samplePositionVS0036.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0036, _diff0036);
    _TMP12 = inversesqrt(_TMP11);
    _v0036 = _TMP12*_diff0036;
    _d0036 = length(_diff0036);
    if (_d0036 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0036);
        _b0050 = _TMP10*(1.00000000E+000 + _d0036);
        _occlusion10036 = max(0.00000000E+000, _b0050);
        _TMP35 = _occlusion10036;
    } else {
        _TMP35 = 0.00000000E+000;
    } // end if
    _occlusion = _occlusion + _TMP35;
    _sampleOffset0052 = _coord21*5.00000000E-001;
    _c0054 = gl_TexCoord[0].xy + _sampleOffset0052;
    _samplePositionVS0052 = texture2D(_PositionMap, _c0054);
    _diff0052 = _samplePositionVS0052.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0052, _diff0052);
    _TMP12 = inversesqrt(_TMP11);
    _v0052 = _TMP12*_diff0052;
    _d0052 = length(_diff0052);
    if (_d0052 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0052);
        _b0066 = _TMP10*(1.00000000E+000 + _d0052);
        _occlusion10052 = max(0.00000000E+000, _b0066);
        _TMP51 = _occlusion10052;
    } else {
        _TMP51 = 0.00000000E+000;
    } // end if
    _occlusion = _occlusion + _TMP51;
    _sampleOffset0068 = _sampleOffset1*7.50000000E-001;
    _c0070 = gl_TexCoord[0].xy + _sampleOffset0068;
    _samplePositionVS0068 = texture2D(_PositionMap, _c0070);
    _diff0068 = _samplePositionVS0068.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0068, _diff0068);
    _TMP12 = inversesqrt(_TMP11);
    _v0068 = _TMP12*_diff0068;
    _d0068 = length(_diff0068);
    if (_d0068 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0068);
        _b0082 = _TMP10*(1.00000000E+000 + _d0068);
        _occlusion10068 = max(0.00000000E+000, _b0082);
        _TMP67 = _occlusion10068;
    } else {
        _TMP67 = 0.00000000E+000;
    } // end if
    _occlusion = _occlusion + _TMP67;
    _c0086 = gl_TexCoord[0].xy + _coord21;
    _samplePositionVS0084 = texture2D(_PositionMap, _c0086);
    _diff0084 = _samplePositionVS0084.xyz - _positionVS1.xyz;
    _TMP11 = dot(_diff0084, _diff0084);
    _TMP12 = inversesqrt(_TMP11);
    _v0084 = _TMP12*_diff0084;
    _d0084 = length(_diff0084);
    if (_d0084 < 1.00000001E-001) { // if begin
        _TMP10 = dot(_TMP1.xyz, _v0084);
        _b0098 = _TMP10*(1.00000000E+000 + _d0084);
        _occlusion10084 = max(0.00000000E+000, _b0098);
        _TMP83 = _occlusion10084;
    } else {
        _TMP83 = 0.00000000E+000;
    } // end if
    _occlusion = _occlusion + _TMP83;
    _occlusion = _occlusion/1.60000000E+001;
    _occlusion = 1.00000000E+000 - _occlusion;
    _ret_0 = vec4(_occlusion, _occlusion, _occlusion, 1.00000000E+000);
    gl_FragColor = _ret_0;
    return;
} // main end
