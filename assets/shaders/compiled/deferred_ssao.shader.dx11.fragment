// ps_4_0 output by Cg compiler
// cgc version 3.1.0013, build date Apr 24 2012
// command line args: -DDX11=1 -q -unroll all -profile ps_5_0
// source file: deferred_ssao.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile ps_5_0
//program ps
//semantic HalfPixel
//semantic Radius
//semantic NoiseScale
//semantic Kernel
//semantic Far
//semantic Near
//semantic NoiseMap : TEXUNIT0
//semantic NormalMap : TEXUNIT1
//semantic LinearDepthMap : TEXUNIT2
//semantic DepthMap : TEXUNIT3
//semantic Projection
//semantic ProjInv
//semantic View
//var sampler2D LinearDepthMap : TEXUNIT2 : _LinearDepthMap 2 : -1 : 1
//var float4x4 ProjInv :  : _ProjInv[0], 4 : -1 : 1
//var float2 texCoord : $vin.TEXCOORD0 :  : 1 : 1
//var float4 ps : $vout.COLOR0 : COLOR0 : -1 : 1

#pragma pack_matrix(row_major)

struct VOutput {
    float4 _position1 : SV_Position;
    float2 _texCoord3 : TEXCOORD0;
};

struct X1X {
    float4 _POSITION : SV_Position;
    float2 _TEXCOORD0 : TEXCOORD0;
};

static float4 _TMP1;
static float4 _positionScreen0012;
static float _depth0012;
static float4 _r0014;
Texture2D<float4> _TMP15 : register(t2);
SamplerState _LinearDepthMap : TEXUNIT2;
uniform float4x4 _ProjInv;

 // main procedure, the original name was ps
float4 main( in X1X cin) : SV_Target0
{

    float2 _texCoord2;
    float4 _positionView;

    _texCoord2 = cin._TEXCOORD0;
    _TMP1 = _TMP15.Sample(_LinearDepthMap, _texCoord2);
    _depth0012 = -_TMP1.x;
    _positionScreen0012.xy = _texCoord2.xy*  2.00000000000000000E00f -   1.00000000000000000E00f;
    _positionScreen0012.y =   1.00000000000000000E00f - _positionScreen0012.y;
    _positionScreen0012.z = _depth0012;
    _positionScreen0012.w =   1.00000000000000000E00f;
    _r0014.x = dot(_ProjInv._11_12_13_14, _positionScreen0012);
    _r0014.y = dot(_ProjInv._21_22_23_24, _positionScreen0012);
    _r0014.z = dot(_ProjInv._31_32_33_34, _positionScreen0012);
    _r0014.w = dot(_ProjInv._41_42_43_44, _positionScreen0012);
    _positionView = _r0014/_r0014.w;
    return _positionView;
} // main end
