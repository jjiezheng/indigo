// ps_4_0 output by Cg compiler
// cgc version 3.1.0013, build date Apr 24 2012
// command line args: -DDX11=1 -q -unroll all -profile ps_5_0
// source file: deferred_ssao.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile ps_5_0
//program ps
//semantic HalfPixel
//semantic Radius
//semantic NoiseScale
//semantic Kernel
//semantic Far
//semantic Near
//semantic NoiseMap : TEXUNIT0
//semantic NormalMap : TEXUNIT1
//semantic SSAODepthMap : TEXUNIT2
//semantic DepthMap : TEXUNIT3
//semantic Projection
//semantic ProjInv
//semantic View
//var float2 NoiseScale :  : _NoiseScale : -1 : 1
//var sampler2D NoiseMap : TEXUNIT0 : _NoiseMap 0 : -1 : 1
//var float2 texCoord : $vin.TEXCOORD0 :  : 1 : 1
//var float4 ps : $vout.COLOR0 : COLOR0 : -1 : 1

#pragma pack_matrix(row_major)

struct VOutput {
    float4 _position1 : SV_Position;
    float2 _texCoord4 : TEXCOORD0;
};

struct X1X {
    float4 _POSITION : SV_Position;
    float2 _TEXCOORD0 : TEXCOORD0;
};

static float4 _TMP1;
Texture2D<float4> _TMP19 : register(t0);
uniform float2 _NoiseScale;
SamplerState _NoiseMap : TEXUNIT0;

 // main procedure, the original name was ps
float4 main( in X1X cin) : SV_Target0
{

    float2 _texCoord3;
    float2 _noiseTexCoords;

    _texCoord3 = cin._TEXCOORD0;
    _noiseTexCoords = _texCoord3*_NoiseScale;
    _TMP1 = _TMP19.Sample(_NoiseMap, _noiseTexCoords);
    return float4(_TMP1.x, _TMP1.y, _TMP1.z,   1.00000000000000000E00f);
} // main end
