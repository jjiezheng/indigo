// vs_4_0 output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -DDX11=1 -q -unroll all -profile vs_5_0
// source file: deferred_render_color_normal_depth.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile vs_5_0
//program vs
//semantic WorldView
//semantic WorldViewProj
//semantic NormalMatrix
//semantic DiffuseColor
//semantic Near
//semantic Far
//var float4x4 WorldView :  : _WorldView[0], 4 : -1 : 1
//var float4x4 WorldViewProj :  : _WorldViewProj[0], 4 : -1 : 1
//var float4x4 NormalMatrix :  : _NormalMatrix[0], 4 : -1 : 1
//var float4 position : $vin.POSITION : POSITION : 0 : 1
//var float3 normal : $vin.NORMAL : NORMAL : 1 : 1
//var float4 vs.position : $vout.POSITION :  : -1 : 1
//var float3 vs.normal : $vout.TEXCOORD0 :  : -1 : 1
//var float3 vs.viewNormal : $vout.TEXCOORD1 :  : -1 : 1
//var float4 vs.viewPosition : $vout.TEXCOORD2 :  : -1 : 1

#pragma pack_matrix(row_major)

struct VOutput {
    float4 _position1 : POSITION;
    float3 _normal1 : TEXCOORD0;
    float3 _viewNormal : TEXCOORD1;
    float4 _viewPosition : TEXCOORD2;
};

struct POutput {
    float4 _color : COLOR0;
    float3 _normal2 : COLOR1;
    float4 _depth : COLOR2;
    float3 _viewNormal1 : COLOR3;
};

struct X1X {
    float4 _POSITION : SV_Position;
    float3 _TEXCOORD0 : TEXCOORD0;
    float3 _TEXCOORD1 : TEXCOORD1;
    float4 _TEXCOORD2 : TEXCOORD2;
};

static float4 _r0005;
static float4 _r0007;
static float4 _v0007;
static float4 _r0009;
static X1X cout;
uniform float4x4 _WorldView;
uniform float4x4 _WorldViewProj;
uniform float4x4 _NormalMatrix;

 // main procedure, the original name was vs
X1X main(in float4 _position : POSITION, in float3 _normal : NORMAL0)
{

    VOutput _OUT;

    _OUT._normal1 = _normal;
    _r0005.x = dot(_WorldViewProj._11_12_13_14, _position);
    _r0005.y = dot(_WorldViewProj._21_22_23_24, _position);
    _r0005.z = dot(_WorldViewProj._31_32_33_34, _position);
    _r0005.w = dot(_WorldViewProj._41_42_43_44, _position);
    _OUT._position1 = _r0005;
    _v0007 = float4(_normal.x, _normal.y, _normal.z,  1.00000000000000000E000f);
    _r0007.x = dot(_NormalMatrix._11_12_13_14, _v0007);
    _r0007.y = dot(_NormalMatrix._21_22_23_24, _v0007);
    _r0007.z = dot(_NormalMatrix._31_32_33_34, _v0007);
    _OUT._viewNormal = _r0007.xyz;
    _r0009.x = dot(_WorldView._11_12_13_14, _position);
    _r0009.y = dot(_WorldView._21_22_23_24, _position);
    _r0009.z = dot(_WorldView._31_32_33_34, _position);
    _OUT._viewPosition = float4(_r0009.x, _r0009.y, _r0009.z,  1.00000000000000000E000f);
    cout._POSITION = _OUT._position1;
    cout._TEXCOORD0 = _OUT._normal1;
    cout._TEXCOORD1 = _OUT._viewNormal;
    cout._TEXCOORD2 = _OUT._viewPosition;
    return cout;
} // main end
