// ps_4_0 output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -DDX11=1 -q -unroll all -profile ps_5_0
// source file: fxaa_color_luma.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile ps_5_0
//program ps
//semantic InputMap
//semantic HalfPixel
//semantic ScreenSizeInv
//var sampler2D InputMap :  : _InputMap : -1 : 1
//var float2 HalfPixel :  : _HalfPixel : -1 : 1
//var float2 texCoord : $vin.TEXCOORD0 :  : 1 : 1
//var float4 ps : $vout.COLOR0 : COLOR0 : -1 : 1

#pragma pack_matrix(row_major)

struct VOutput {
    float4 _position1 : SV_Position;
    float2 _texCoord1 : TEXCOORD0;
};

struct X1X {
    float4 _POSITION : SV_Position;
    float2 _TEXCOORD0 : TEXCOORD0;
};

static float4 _TMP0;
Texture2D<float4> _TMP2;
SamplerState _InputMap;
uniform float2 _HalfPixel;

 // main procedure, the original name was ps
float4 main( in X1X cin) : SV_Target0
{

    float2 _texCoord;
    float _luma;

    _texCoord = cin._TEXCOORD0;
    _TMP0 = _TMP2.Sample(_InputMap, _texCoord + _HalfPixel);
    _luma = dot(_TMP0.xyz, float3(  2.98999994993209840E-001f,  5.87000012397766110E-001f,  1.14000000059604640E-001f));
    return float4(_TMP0.x, _TMP0.y, _TMP0.z, _luma);
} // main end
