// glslf output by Cg compiler
// cgc version 3.1.0013, build date Apr 18 2012
// command line args: -DGL=1 -DGL32=1 -q -profileopts version=130 -profile glslf
// source file: deferred_ssao.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslf
//program ps
//semantic HalfPixel
//semantic Radius
//semantic NoiseScale
//semantic Kernel
//semantic Far
//semantic Near
//semantic NoiseMap : TEXUNIT0
//semantic NormalViewSpaceMap : TEXUNIT1
//semantic LinearDepthMap : TEXUNIT2
//semantic DepthMap : TEXUNIT3
//semantic Projection
//semantic ProjInv
//semantic ModelView
//semantic View
//var float Radius :  : _Radius : -1 : 1
//var float2 NoiseScale :  : _NoiseScale : -1 : 1
//var float4 Kernel[0] :  : _Kernel[0] : -1 : 1
//var float4 Kernel[1] :  : _Kernel[1] : -1 : 1
//var float4 Kernel[2] :  : _Kernel[2] : -1 : 1
//var float4 Kernel[3] :  : _Kernel[3] : -1 : 1
//var float4 Kernel[4] :  : _Kernel[4] : -1 : 1
//var float4 Kernel[5] :  : _Kernel[5] : -1 : 1
//var float4 Kernel[6] :  : _Kernel[6] : -1 : 1
//var float4 Kernel[7] :  : _Kernel[7] : -1 : 1
//var float4 Kernel[8] :  : _Kernel[8] : -1 : 1
//var float4 Kernel[9] :  : _Kernel[9] : -1 : 1
//var float4 Kernel[10] :  : _Kernel[10] : -1 : 1
//var float4 Kernel[11] :  : _Kernel[11] : -1 : 1
//var float4 Kernel[12] :  : _Kernel[12] : -1 : 1
//var float4 Kernel[13] :  : _Kernel[13] : -1 : 1
//var float4 Kernel[14] :  : _Kernel[14] : -1 : 1
//var float4 Kernel[15] :  : _Kernel[15] : -1 : 1
//var sampler2D NoiseMap : TEXUNIT0 : _NoiseMap 0 : -1 : 1
//var sampler2D NormalViewSpaceMap : TEXUNIT1 : _NormalViewSpaceMap 1 : -1 : 1
//var sampler2D DepthMap : TEXUNIT3 : _DepthMap 3 : -1 : 1
//var float4x4 Projection :  : _Projection[0], 4 : -1 : 1
//var float4x4 ProjInv :  : _ProjInv[0], 4 : -1 : 1
//var float2 texCoord : $vin.TEXCOORD0 : TEXCOORD0 : 1 : 1
//var float4 ps : $vout.COLOR0 : COLOR0 : -1 : 1

#version 130

struct VOutput {
    vec2 _texCoord3;
};

vec4 _ret_0;
vec4 _TMP5;
float _TMP4;
float _TMP7;
float _TMP6;
vec4 _TMP3;
vec4 _TMP2;
vec4 _TMP1;
vec3 _v0027;
vec4 _positionScreen0035;
vec4 _r0037;
vec3 _v0051;
vec3 _r0059;
vec4 _r0061;
vec4 _v0061;
vec2 _tex0071;
uniform float _Radius;
uniform vec2 _NoiseScale;
uniform vec4 _Kernel[16];
uniform sampler2D _NoiseMap;
uniform sampler2D _NormalViewSpaceMap;
uniform sampler2D _DepthMap;
uniform vec4 _Projection[4];
uniform vec4 _ProjInv[4];
in vec4 cg_TexCoord0;
out vec4 cg_FragColor;

 // main procedure, the original name was ps
void main()
{

    vec3 _normal;
    vec4 _positionView;
    vec2 _noiseTexCoords;
    vec3 _rvec;
    vec3 _tangent;
    vec3 _bitangent;
    float _occlusionContribution;
    vec3 _sample1;
    vec3 _sampleAtViewPosition1;
    vec4 _sampleNDC1;
    float _occlusionFactor1;
    float _occlusion;

    _TMP1 = texture(_NormalViewSpaceMap, cg_TexCoord0.xy);
    _v0027 = _TMP1.xyz*2.00000000E+000 - 1.00000000E+000;
    _TMP6 = dot(_v0027, _v0027);
    _TMP7 = inversesqrt(_TMP6);
    _normal = _TMP7*_v0027;
    _TMP2 = texture(_DepthMap, cg_TexCoord0.xy);
    _positionScreen0035.xy = cg_TexCoord0.xy*2.00000000E+000 - 1.00000000E+000;
    _positionScreen0035.z = _TMP2.x;
    _positionScreen0035.w = 1.00000000E+000;
    _r0037.x = dot(_ProjInv[0], _positionScreen0035);
    _r0037.y = dot(_ProjInv[1], _positionScreen0035);
    _r0037.z = dot(_ProjInv[2], _positionScreen0035);
    _r0037.w = dot(_ProjInv[3], _positionScreen0035);
    _positionView = _r0037/_r0037.w;
    _noiseTexCoords = cg_TexCoord0.xy*_NoiseScale;
    _TMP3 = texture(_NoiseMap, _noiseTexCoords);
    _rvec = _TMP3.xyz*2.00000000E+000 - 1.00000000E+000;
    _TMP4 = dot(_rvec, _normal);
    _v0051 = _rvec - _normal*_TMP4;
    _TMP6 = dot(_v0051, _v0051);
    _TMP7 = inversesqrt(_TMP6);
    _tangent = _TMP7*_v0051;
    _bitangent = _tangent.yzx*_normal.zxy - _tangent.zxy*_normal.yzx;
    _sample1 = _Kernel[0].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionFactor1;
    _sample1 = _Kernel[1].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + _occlusionFactor1;
    _sample1 = _Kernel[2].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + _occlusionFactor1;
    _sample1 = _Kernel[3].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + _occlusionFactor1;
    _sample1 = _Kernel[4].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + _occlusionFactor1;
    _sample1 = _Kernel[5].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + _occlusionFactor1;
    _sample1 = _Kernel[6].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + _occlusionFactor1;
    _sample1 = _Kernel[7].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + _occlusionFactor1;
    _sample1 = _Kernel[8].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + _occlusionFactor1;
    _sample1 = _Kernel[9].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + _occlusionFactor1;
    _sample1 = _Kernel[10].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + _occlusionFactor1;
    _sample1 = _Kernel[11].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + _occlusionFactor1;
    _sample1 = _Kernel[12].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + _occlusionFactor1;
    _sample1 = _Kernel[13].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + _occlusionFactor1;
    _sample1 = _Kernel[14].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + _occlusionFactor1;
    _sample1 = _Kernel[15].xyz*_Radius;
    _r0059 = _sample1.x*_tangent;
    _r0059 = _r0059 + _sample1.y*_bitangent;
    _r0059 = _r0059 + _sample1.z*_normal;
    _sampleAtViewPosition1 = _positionView.xyz + _r0059;
    _v0061 = vec4(_sampleAtViewPosition1.x, _sampleAtViewPosition1.y, _sampleAtViewPosition1.z, 1.00000000E+000);
    _r0061.x = dot(_Projection[0], _v0061);
    _r0061.y = dot(_Projection[1], _v0061);
    _r0061.z = dot(_Projection[2], _v0061);
    _r0061.w = dot(_Projection[3], _v0061);
    _sampleNDC1 = _r0061/_r0061.w;
    _tex0071 = _sampleNDC1.xy*5.00000000E-001 + 5.00000000E-001;
    _TMP5 = texture(_DepthMap, _tex0071);
    _occlusionFactor1 = 1.00000000E+000;
    if (_TMP5.x < _TMP2.x) { // if begin
        _occlusionFactor1 = 0.00000000E+000;
    } // end if
    _occlusionContribution = _occlusionContribution + _occlusionFactor1;
    _occlusion = _occlusionContribution/1.60000000E+001;
    _ret_0 = vec4(_occlusion, _occlusion, _occlusion, 1.00000000E+000);
    cg_FragColor = _ret_0;
    return;
} // main end
