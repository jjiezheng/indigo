// glslf output by Cg compiler
// cgc version 3.1.0013, build date Apr 24 2012
// command line args: -DGL=1 -DGL32=1 -q -profileopts version=130 -profile glslf
// source file: deferred_ssao.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile glslf
//program ps
//semantic HalfPixel
//semantic Radius
//semantic NoiseScale
//semantic Kernel
//semantic Far
//semantic Near
//semantic NormalMap : TEXUNIT0
//semantic DepthMap : TEXUNIT1
//semantic NoiseMap : TEXUNIT2
//semantic Projection
//semantic ProjInv
//semantic ModelView
//semantic View
//semantic ViewProjInv
//var float Radius :  : _Radius : -1 : 1
//var float2 NoiseScale :  : _NoiseScale : -1 : 1
//var sampler2D NormalMap : TEXUNIT0 : _NormalMap 0 : -1 : 1
//var sampler2D DepthMap : TEXUNIT1 : _DepthMap 1 : -1 : 1
//var sampler2D NoiseMap : TEXUNIT2 : _NoiseMap 2 : -1 : 1
//var float4x4 ViewProjInv :  : _ViewProjInv[0], 4 : -1 : 1
//var float2 texCoord : $vin.TEXCOORD0 : TEXCOORD0 : 1 : 1
//var float4 ps : $vout.COLOR0 : COLOR0 : -1 : 1

#version 130

struct VOutput {
    vec2 _texCoord6;
};

struct POutput {
    vec4 _ssao;
    vec4 _temp;
};

vec4 _ret_0;
float _TMP11;
float _TMP8;
float _TMP7;
vec2 _TMP2;
float _TMP10;
vec4 _TMP9;
vec4 _TMP1;
vec4 _normalData0028;
vec4 _unPackedNormal0028;
vec2 _c0038;
vec4 _positionScreen0044;
vec4 _r0046;
vec2 _sampleCoord0060;
vec2 _sampleOffset0060;
vec4 _samplePositionWS0060;
vec3 _diff0060;
vec3 _v0060;
float _d0060;
float _occlusion0060;
vec4 _positionScreen0062;
vec4 _r0064;
float _b0084;
vec2 _sampleCoord0086;
vec2 _sampleOffset0086;
vec4 _samplePositionWS0086;
vec3 _diff0086;
vec3 _v0086;
float _d0086;
float _occlusion0086;
vec4 _positionScreen0088;
vec4 _r0090;
float _b0110;
vec2 _sampleCoord0112;
vec2 _sampleOffset0112;
vec4 _samplePositionWS0112;
vec3 _diff0112;
vec3 _v0112;
float _d0112;
float _occlusion0112;
vec4 _positionScreen0114;
vec4 _r0116;
float _b0136;
vec2 _sampleCoord0138;
vec4 _samplePositionWS0138;
vec3 _diff0138;
vec3 _v0138;
float _d0138;
float _occlusion0138;
vec4 _positionScreen0140;
vec4 _r0142;
float _b0162;
uniform float _Radius;
uniform vec2 _NoiseScale;
uniform sampler2D _NormalMap;
uniform sampler2D _DepthMap;
uniform sampler2D _NoiseMap;
uniform vec4 _ViewProjInv[4];
in vec4 cg_TexCoord0;
out vec4 cg_FragColor;

 // main procedure, the original name was ps
void main()
{

    vec3 _normalWS1;
    vec3 _random;
    float _depth2;
    vec4 _positionWS1;
    float _rad;
    float _occlusion1;
    vec2 _sampleOffset1;
    vec2 _coord21;

    _normalData0028 = texture(_NormalMap, cg_TexCoord0.xy);
    _unPackedNormal0028 = _normalData0028*2.00000000E+00 - 1.00000000E+00;
    _TMP7 = dot(_unPackedNormal0028.xyz, _unPackedNormal0028.xyz);
    _TMP8 = inversesqrt(_TMP7);
    _normalWS1 = _TMP8*_unPackedNormal0028.xyz;
    _c0038 = cg_TexCoord0.xy*_NoiseScale;
    _TMP1 = texture(_NoiseMap, _c0038);
    _random = _TMP1.xyz*2.00000000E+00 - 1.00000000E+00;
    _TMP9 = texture(_DepthMap, cg_TexCoord0.xy);
    _depth2 = _TMP9.x*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0044.xy = cg_TexCoord0.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0044.z = _depth2;
    _positionScreen0044.w = 1.00000000E+00;
    _r0046.x = dot(_ViewProjInv[0], _positionScreen0044);
    _r0046.y = dot(_ViewProjInv[1], _positionScreen0044);
    _r0046.z = dot(_ViewProjInv[2], _positionScreen0044);
    _r0046.w = dot(_ViewProjInv[3], _positionScreen0044);
    _positionWS1 = _r0046/_r0046.w;
    _rad = _Radius/_positionWS1.z;
    _TMP10 = dot(_random.xy, vec2( 1.00000000E+00, 0.00000000E+00));
    _TMP2 = vec2( 1.00000000E+00, 0.00000000E+00) - (2.00000000E+00*_random.xy)*_TMP10;
    _sampleOffset1 = _TMP2*_rad;
    _coord21 = vec2(_sampleOffset1.x*7.07000017E-01 - _sampleOffset1.y*7.07000017E-01, _sampleOffset1.x*7.07000017E-01 + _sampleOffset1.y*7.07000017E-01);
    _sampleOffset0060 = _sampleOffset1*2.50000000E-01;
    _sampleCoord0060 = cg_TexCoord0.xy + _sampleOffset0060;
    _positionScreen0062.xy = _sampleCoord0060.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0062.z = _depth2;
    _positionScreen0062.w = 1.00000000E+00;
    _r0064.x = dot(_ViewProjInv[0], _positionScreen0062);
    _r0064.y = dot(_ViewProjInv[1], _positionScreen0062);
    _r0064.z = dot(_ViewProjInv[2], _positionScreen0062);
    _r0064.w = dot(_ViewProjInv[3], _positionScreen0062);
    _samplePositionWS0060 = _r0064/_r0064.w;
    _diff0060 = _samplePositionWS0060.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0060, _diff0060);
    _TMP8 = inversesqrt(_TMP7);
    _v0060 = _TMP8*_diff0060;
    _d0060 = length(_diff0060);
    _TMP11 = dot(_normalWS1, _v0060);
    _b0084 = _TMP11*(1.00000000E+00 + _d0060);
    _occlusion0060 = max(0.00000000E+00, _b0084);
    _sampleOffset0086 = _coord21*5.00000000E-01;
    _sampleCoord0086 = cg_TexCoord0.xy + _sampleOffset0086;
    _positionScreen0088.xy = _sampleCoord0086.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0088.z = _depth2;
    _positionScreen0088.w = 1.00000000E+00;
    _r0090.x = dot(_ViewProjInv[0], _positionScreen0088);
    _r0090.y = dot(_ViewProjInv[1], _positionScreen0088);
    _r0090.z = dot(_ViewProjInv[2], _positionScreen0088);
    _r0090.w = dot(_ViewProjInv[3], _positionScreen0088);
    _samplePositionWS0086 = _r0090/_r0090.w;
    _diff0086 = _samplePositionWS0086.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0086, _diff0086);
    _TMP8 = inversesqrt(_TMP7);
    _v0086 = _TMP8*_diff0086;
    _d0086 = length(_diff0086);
    _TMP11 = dot(_normalWS1, _v0086);
    _b0110 = _TMP11*(1.00000000E+00 + _d0086);
    _occlusion0086 = max(0.00000000E+00, _b0110);
    _occlusion1 = _occlusion0060 + _occlusion0086;
    _sampleOffset0112 = _sampleOffset1*7.50000000E-01;
    _sampleCoord0112 = cg_TexCoord0.xy + _sampleOffset0112;
    _positionScreen0114.xy = _sampleCoord0112.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0114.z = _depth2;
    _positionScreen0114.w = 1.00000000E+00;
    _r0116.x = dot(_ViewProjInv[0], _positionScreen0114);
    _r0116.y = dot(_ViewProjInv[1], _positionScreen0114);
    _r0116.z = dot(_ViewProjInv[2], _positionScreen0114);
    _r0116.w = dot(_ViewProjInv[3], _positionScreen0114);
    _samplePositionWS0112 = _r0116/_r0116.w;
    _diff0112 = _samplePositionWS0112.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0112, _diff0112);
    _TMP8 = inversesqrt(_TMP7);
    _v0112 = _TMP8*_diff0112;
    _d0112 = length(_diff0112);
    _TMP11 = dot(_normalWS1, _v0112);
    _b0136 = _TMP11*(1.00000000E+00 + _d0112);
    _occlusion0112 = max(0.00000000E+00, _b0136);
    _occlusion1 = _occlusion1 + _occlusion0112;
    _sampleCoord0138 = cg_TexCoord0.xy + _coord21;
    _positionScreen0140.xy = _sampleCoord0138.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0140.z = _depth2;
    _positionScreen0140.w = 1.00000000E+00;
    _r0142.x = dot(_ViewProjInv[0], _positionScreen0140);
    _r0142.y = dot(_ViewProjInv[1], _positionScreen0140);
    _r0142.z = dot(_ViewProjInv[2], _positionScreen0140);
    _r0142.w = dot(_ViewProjInv[3], _positionScreen0140);
    _samplePositionWS0138 = _r0142/_r0142.w;
    _diff0138 = _samplePositionWS0138.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0138, _diff0138);
    _TMP8 = inversesqrt(_TMP7);
    _v0138 = _TMP8*_diff0138;
    _d0138 = length(_diff0138);
    _TMP11 = dot(_normalWS1, _v0138);
    _b0162 = _TMP11*(1.00000000E+00 + _d0138);
    _occlusion0138 = max(0.00000000E+00, _b0162);
    _occlusion1 = _occlusion1 + _occlusion0138;
    _TMP10 = dot(_random.xy, vec2( -1.00000000E+00, 0.00000000E+00));
    _TMP2 = vec2( -1.00000000E+00, 0.00000000E+00) - (2.00000000E+00*_random.xy)*_TMP10;
    _sampleOffset1 = _TMP2*_rad;
    _coord21 = vec2(_sampleOffset1.x*7.07000017E-01 - _sampleOffset1.y*7.07000017E-01, _sampleOffset1.x*7.07000017E-01 + _sampleOffset1.y*7.07000017E-01);
    _sampleOffset0060 = _sampleOffset1*2.50000000E-01;
    _sampleCoord0060 = cg_TexCoord0.xy + _sampleOffset0060;
    _positionScreen0062.xy = _sampleCoord0060.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0062.z = _depth2;
    _positionScreen0062.w = 1.00000000E+00;
    _r0064.x = dot(_ViewProjInv[0], _positionScreen0062);
    _r0064.y = dot(_ViewProjInv[1], _positionScreen0062);
    _r0064.z = dot(_ViewProjInv[2], _positionScreen0062);
    _r0064.w = dot(_ViewProjInv[3], _positionScreen0062);
    _samplePositionWS0060 = _r0064/_r0064.w;
    _diff0060 = _samplePositionWS0060.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0060, _diff0060);
    _TMP8 = inversesqrt(_TMP7);
    _v0060 = _TMP8*_diff0060;
    _d0060 = length(_diff0060);
    _TMP11 = dot(_normalWS1, _v0060);
    _b0084 = _TMP11*(1.00000000E+00 + _d0060);
    _occlusion0060 = max(0.00000000E+00, _b0084);
    _occlusion1 = _occlusion1 + _occlusion0060;
    _sampleOffset0086 = _coord21*5.00000000E-01;
    _sampleCoord0086 = cg_TexCoord0.xy + _sampleOffset0086;
    _positionScreen0088.xy = _sampleCoord0086.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0088.z = _depth2;
    _positionScreen0088.w = 1.00000000E+00;
    _r0090.x = dot(_ViewProjInv[0], _positionScreen0088);
    _r0090.y = dot(_ViewProjInv[1], _positionScreen0088);
    _r0090.z = dot(_ViewProjInv[2], _positionScreen0088);
    _r0090.w = dot(_ViewProjInv[3], _positionScreen0088);
    _samplePositionWS0086 = _r0090/_r0090.w;
    _diff0086 = _samplePositionWS0086.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0086, _diff0086);
    _TMP8 = inversesqrt(_TMP7);
    _v0086 = _TMP8*_diff0086;
    _d0086 = length(_diff0086);
    _TMP11 = dot(_normalWS1, _v0086);
    _b0110 = _TMP11*(1.00000000E+00 + _d0086);
    _occlusion0086 = max(0.00000000E+00, _b0110);
    _occlusion1 = _occlusion1 + _occlusion0086;
    _sampleOffset0112 = _sampleOffset1*7.50000000E-01;
    _sampleCoord0112 = cg_TexCoord0.xy + _sampleOffset0112;
    _positionScreen0114.xy = _sampleCoord0112.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0114.z = _depth2;
    _positionScreen0114.w = 1.00000000E+00;
    _r0116.x = dot(_ViewProjInv[0], _positionScreen0114);
    _r0116.y = dot(_ViewProjInv[1], _positionScreen0114);
    _r0116.z = dot(_ViewProjInv[2], _positionScreen0114);
    _r0116.w = dot(_ViewProjInv[3], _positionScreen0114);
    _samplePositionWS0112 = _r0116/_r0116.w;
    _diff0112 = _samplePositionWS0112.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0112, _diff0112);
    _TMP8 = inversesqrt(_TMP7);
    _v0112 = _TMP8*_diff0112;
    _d0112 = length(_diff0112);
    _TMP11 = dot(_normalWS1, _v0112);
    _b0136 = _TMP11*(1.00000000E+00 + _d0112);
    _occlusion0112 = max(0.00000000E+00, _b0136);
    _occlusion1 = _occlusion1 + _occlusion0112;
    _sampleCoord0138 = cg_TexCoord0.xy + _coord21;
    _positionScreen0140.xy = _sampleCoord0138.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0140.z = _depth2;
    _positionScreen0140.w = 1.00000000E+00;
    _r0142.x = dot(_ViewProjInv[0], _positionScreen0140);
    _r0142.y = dot(_ViewProjInv[1], _positionScreen0140);
    _r0142.z = dot(_ViewProjInv[2], _positionScreen0140);
    _r0142.w = dot(_ViewProjInv[3], _positionScreen0140);
    _samplePositionWS0138 = _r0142/_r0142.w;
    _diff0138 = _samplePositionWS0138.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0138, _diff0138);
    _TMP8 = inversesqrt(_TMP7);
    _v0138 = _TMP8*_diff0138;
    _d0138 = length(_diff0138);
    _TMP11 = dot(_normalWS1, _v0138);
    _b0162 = _TMP11*(1.00000000E+00 + _d0138);
    _occlusion0138 = max(0.00000000E+00, _b0162);
    _occlusion1 = _occlusion1 + _occlusion0138;
    _TMP10 = dot(_random.xy, vec2( 0.00000000E+00, 1.00000000E+00));
    _TMP2 = vec2( 0.00000000E+00, 1.00000000E+00) - (2.00000000E+00*_random.xy)*_TMP10;
    _sampleOffset1 = _TMP2*_rad;
    _coord21 = vec2(_sampleOffset1.x*7.07000017E-01 - _sampleOffset1.y*7.07000017E-01, _sampleOffset1.x*7.07000017E-01 + _sampleOffset1.y*7.07000017E-01);
    _sampleOffset0060 = _sampleOffset1*2.50000000E-01;
    _sampleCoord0060 = cg_TexCoord0.xy + _sampleOffset0060;
    _positionScreen0062.xy = _sampleCoord0060.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0062.z = _depth2;
    _positionScreen0062.w = 1.00000000E+00;
    _r0064.x = dot(_ViewProjInv[0], _positionScreen0062);
    _r0064.y = dot(_ViewProjInv[1], _positionScreen0062);
    _r0064.z = dot(_ViewProjInv[2], _positionScreen0062);
    _r0064.w = dot(_ViewProjInv[3], _positionScreen0062);
    _samplePositionWS0060 = _r0064/_r0064.w;
    _diff0060 = _samplePositionWS0060.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0060, _diff0060);
    _TMP8 = inversesqrt(_TMP7);
    _v0060 = _TMP8*_diff0060;
    _d0060 = length(_diff0060);
    _TMP11 = dot(_normalWS1, _v0060);
    _b0084 = _TMP11*(1.00000000E+00 + _d0060);
    _occlusion0060 = max(0.00000000E+00, _b0084);
    _occlusion1 = _occlusion1 + _occlusion0060;
    _sampleOffset0086 = _coord21*5.00000000E-01;
    _sampleCoord0086 = cg_TexCoord0.xy + _sampleOffset0086;
    _positionScreen0088.xy = _sampleCoord0086.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0088.z = _depth2;
    _positionScreen0088.w = 1.00000000E+00;
    _r0090.x = dot(_ViewProjInv[0], _positionScreen0088);
    _r0090.y = dot(_ViewProjInv[1], _positionScreen0088);
    _r0090.z = dot(_ViewProjInv[2], _positionScreen0088);
    _r0090.w = dot(_ViewProjInv[3], _positionScreen0088);
    _samplePositionWS0086 = _r0090/_r0090.w;
    _diff0086 = _samplePositionWS0086.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0086, _diff0086);
    _TMP8 = inversesqrt(_TMP7);
    _v0086 = _TMP8*_diff0086;
    _d0086 = length(_diff0086);
    _TMP11 = dot(_normalWS1, _v0086);
    _b0110 = _TMP11*(1.00000000E+00 + _d0086);
    _occlusion0086 = max(0.00000000E+00, _b0110);
    _occlusion1 = _occlusion1 + _occlusion0086;
    _sampleOffset0112 = _sampleOffset1*7.50000000E-01;
    _sampleCoord0112 = cg_TexCoord0.xy + _sampleOffset0112;
    _positionScreen0114.xy = _sampleCoord0112.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0114.z = _depth2;
    _positionScreen0114.w = 1.00000000E+00;
    _r0116.x = dot(_ViewProjInv[0], _positionScreen0114);
    _r0116.y = dot(_ViewProjInv[1], _positionScreen0114);
    _r0116.z = dot(_ViewProjInv[2], _positionScreen0114);
    _r0116.w = dot(_ViewProjInv[3], _positionScreen0114);
    _samplePositionWS0112 = _r0116/_r0116.w;
    _diff0112 = _samplePositionWS0112.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0112, _diff0112);
    _TMP8 = inversesqrt(_TMP7);
    _v0112 = _TMP8*_diff0112;
    _d0112 = length(_diff0112);
    _TMP11 = dot(_normalWS1, _v0112);
    _b0136 = _TMP11*(1.00000000E+00 + _d0112);
    _occlusion0112 = max(0.00000000E+00, _b0136);
    _occlusion1 = _occlusion1 + _occlusion0112;
    _sampleCoord0138 = cg_TexCoord0.xy + _coord21;
    _positionScreen0140.xy = _sampleCoord0138.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0140.z = _depth2;
    _positionScreen0140.w = 1.00000000E+00;
    _r0142.x = dot(_ViewProjInv[0], _positionScreen0140);
    _r0142.y = dot(_ViewProjInv[1], _positionScreen0140);
    _r0142.z = dot(_ViewProjInv[2], _positionScreen0140);
    _r0142.w = dot(_ViewProjInv[3], _positionScreen0140);
    _samplePositionWS0138 = _r0142/_r0142.w;
    _diff0138 = _samplePositionWS0138.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0138, _diff0138);
    _TMP8 = inversesqrt(_TMP7);
    _v0138 = _TMP8*_diff0138;
    _d0138 = length(_diff0138);
    _TMP11 = dot(_normalWS1, _v0138);
    _b0162 = _TMP11*(1.00000000E+00 + _d0138);
    _occlusion0138 = max(0.00000000E+00, _b0162);
    _occlusion1 = _occlusion1 + _occlusion0138;
    _TMP10 = dot(_random.xy, vec2( 0.00000000E+00, -1.00000000E+00));
    _TMP2 = vec2( 0.00000000E+00, -1.00000000E+00) - (2.00000000E+00*_random.xy)*_TMP10;
    _sampleOffset1 = _TMP2*_rad;
    _coord21 = vec2(_sampleOffset1.x*7.07000017E-01 - _sampleOffset1.y*7.07000017E-01, _sampleOffset1.x*7.07000017E-01 + _sampleOffset1.y*7.07000017E-01);
    _sampleOffset0060 = _sampleOffset1*2.50000000E-01;
    _sampleCoord0060 = cg_TexCoord0.xy + _sampleOffset0060;
    _positionScreen0062.xy = _sampleCoord0060.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0062.z = _depth2;
    _positionScreen0062.w = 1.00000000E+00;
    _r0064.x = dot(_ViewProjInv[0], _positionScreen0062);
    _r0064.y = dot(_ViewProjInv[1], _positionScreen0062);
    _r0064.z = dot(_ViewProjInv[2], _positionScreen0062);
    _r0064.w = dot(_ViewProjInv[3], _positionScreen0062);
    _samplePositionWS0060 = _r0064/_r0064.w;
    _diff0060 = _samplePositionWS0060.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0060, _diff0060);
    _TMP8 = inversesqrt(_TMP7);
    _v0060 = _TMP8*_diff0060;
    _d0060 = length(_diff0060);
    _TMP11 = dot(_normalWS1, _v0060);
    _b0084 = _TMP11*(1.00000000E+00 + _d0060);
    _occlusion0060 = max(0.00000000E+00, _b0084);
    _occlusion1 = _occlusion1 + _occlusion0060;
    _sampleOffset0086 = _coord21*5.00000000E-01;
    _sampleCoord0086 = cg_TexCoord0.xy + _sampleOffset0086;
    _positionScreen0088.xy = _sampleCoord0086.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0088.z = _depth2;
    _positionScreen0088.w = 1.00000000E+00;
    _r0090.x = dot(_ViewProjInv[0], _positionScreen0088);
    _r0090.y = dot(_ViewProjInv[1], _positionScreen0088);
    _r0090.z = dot(_ViewProjInv[2], _positionScreen0088);
    _r0090.w = dot(_ViewProjInv[3], _positionScreen0088);
    _samplePositionWS0086 = _r0090/_r0090.w;
    _diff0086 = _samplePositionWS0086.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0086, _diff0086);
    _TMP8 = inversesqrt(_TMP7);
    _v0086 = _TMP8*_diff0086;
    _d0086 = length(_diff0086);
    _TMP11 = dot(_normalWS1, _v0086);
    _b0110 = _TMP11*(1.00000000E+00 + _d0086);
    _occlusion0086 = max(0.00000000E+00, _b0110);
    _occlusion1 = _occlusion1 + _occlusion0086;
    _sampleOffset0112 = _sampleOffset1*7.50000000E-01;
    _sampleCoord0112 = cg_TexCoord0.xy + _sampleOffset0112;
    _positionScreen0114.xy = _sampleCoord0112.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0114.z = _depth2;
    _positionScreen0114.w = 1.00000000E+00;
    _r0116.x = dot(_ViewProjInv[0], _positionScreen0114);
    _r0116.y = dot(_ViewProjInv[1], _positionScreen0114);
    _r0116.z = dot(_ViewProjInv[2], _positionScreen0114);
    _r0116.w = dot(_ViewProjInv[3], _positionScreen0114);
    _samplePositionWS0112 = _r0116/_r0116.w;
    _diff0112 = _samplePositionWS0112.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0112, _diff0112);
    _TMP8 = inversesqrt(_TMP7);
    _v0112 = _TMP8*_diff0112;
    _d0112 = length(_diff0112);
    _TMP11 = dot(_normalWS1, _v0112);
    _b0136 = _TMP11*(1.00000000E+00 + _d0112);
    _occlusion0112 = max(0.00000000E+00, _b0136);
    _occlusion1 = _occlusion1 + _occlusion0112;
    _sampleCoord0138 = cg_TexCoord0.xy + _coord21;
    _positionScreen0140.xy = _sampleCoord0138.xy*2.00000000E+00 - 1.00000000E+00;
    _positionScreen0140.z = _depth2;
    _positionScreen0140.w = 1.00000000E+00;
    _r0142.x = dot(_ViewProjInv[0], _positionScreen0140);
    _r0142.y = dot(_ViewProjInv[1], _positionScreen0140);
    _r0142.z = dot(_ViewProjInv[2], _positionScreen0140);
    _r0142.w = dot(_ViewProjInv[3], _positionScreen0140);
    _samplePositionWS0138 = _r0142/_r0142.w;
    _diff0138 = _samplePositionWS0138.xyz - _positionWS1.xyz;
    _TMP7 = dot(_diff0138, _diff0138);
    _TMP8 = inversesqrt(_TMP7);
    _v0138 = _TMP8*_diff0138;
    _d0138 = length(_diff0138);
    _TMP11 = dot(_normalWS1, _v0138);
    _b0162 = _TMP11*(1.00000000E+00 + _d0138);
    _occlusion0138 = max(0.00000000E+00, _b0162);
    _occlusion1 = _occlusion1 + _occlusion0138;
    _occlusion1 = _occlusion1/1.60000000E+01;
    _ret_0 = vec4(_occlusion1, _occlusion1, _occlusion1, 1.00000000E+00);
    cg_FragColor = _ret_0;
    return;
} // main end
