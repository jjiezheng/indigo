// ps_4_0 output by Cg compiler
// cgc version 3.1.0013, build date Apr 24 2012
// command line args: -DDX11=1 -q -unroll all -profile ps_5_0
// source file: deferred_lighting_spot_light_shadow.cg
//vendor NVIDIA Corporation
//version 3.1.0.13
//profile ps_5_0
//program ps
//semantic DepthMap : TEXUNIT0
//semantic NormalMap : TEXUNIT1
//semantic ShadowMap : TEXUNIT2
//semantic LightInnerAngle
//semantic LightOuterAngle
//semantic LightDecay
//semantic LightDistance
//semantic ShadowMapSize
//semantic LightDirection
//semantic LightPosition
//semantic LightColor
//semantic DirectionToLight
//semantic ViewerPosition
//semantic ViewProjInv
//semantic LightViewProj
//semantic LightViewProjInv
//semantic WorldViewProj
//semantic NormalMatrix
//var sampler2D DepthMap : TEXUNIT0 : _DepthMap 0 : -1 : 1
//var float4x4 ViewProjInv :  : _ViewProjInv[0], 4 : -1 : 1
//var float3 screenPosition : $vin.TEXCOORD0 :  : 1 : 1
//var float4 ps : $vout.COLOR0 : COLOR0 : -1 : 1

#pragma pack_matrix(row_major)

struct VOutput {
    float4 _position1 : SV_Position;
    float3 _screenPosition1 : TEXCOORD0;
};

struct X1X {
    float4 _POSITION : SV_Position;
    float3 _TEXCOORD0 : TEXCOORD0;
};

static float4 _TMP1;
static float2 _TMP0;
static float4 _r0020;
Texture2D<float4> _TMP21 : register(t0);
SamplerState _DepthMap : TEXUNIT0;
uniform float4x4 _ViewProjInv;

 // main procedure, the original name was ps
float4 main( in X1X cin) : SV_Target0
{

    float3 _screenPosition;
    float2 _screenPositionClip;
    float2 _texCoord3;
    float4 _positionScreen;
    float3 _positionWorld;

    _screenPosition = cin._TEXCOORD0;
    _screenPositionClip = _screenPosition.xy/_screenPosition.z;
    _TMP0 = float2(_screenPositionClip.x, -_screenPositionClip.y);
    _texCoord3 =   5.00000000000000000E-01f*(_TMP0 + float2(   1.00000000000000000E00f,   1.00000000000000000E00f));
    _TMP1 = _TMP21.Sample(_DepthMap, _texCoord3);
    _positionScreen = float4(_screenPositionClip.x, _screenPositionClip.y, _TMP1.x,   1.00000000000000000E00f);
    _r0020.x = dot(_ViewProjInv._11_12_13_14, _positionScreen);
    _r0020.y = dot(_ViewProjInv._21_22_23_24, _positionScreen);
    _r0020.z = dot(_ViewProjInv._31_32_33_34, _positionScreen);
    _r0020.w = dot(_ViewProjInv._41_42_43_44, _positionScreen);
    _positionWorld = _r0020.xyz/_r0020.w;
    return float4(_positionWorld.x, _positionWorld.y, _positionWorld.z,   1.00000000000000000E00f);
} // main end
