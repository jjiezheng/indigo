sampler2D SourceMap : TEXUNIT0;

float TexelSize;

struct VOutput {
	float4 position 			: POSITION;
	float2 texCoord				: TEXCOORD0;
};

VOutput vs(float4 position 	: POSITION,
		   		 float2 texCoord 	: TEXCOORD0) {
    VOutput OUT;
    OUT.position = position;
    OUT.texCoord = texCoord;
    return OUT;
}

float4 ps(float4 position   : POSITION,
		  		float2 texCoord 	: TEXCOORD0) : COLOR0 {

	float4 result = float4(0);

	// top

	{
		float2 offset = float2(-1, 1) * TexelSize;
		result += tex2D(SourceMap, texCoord + offset);
	}

	{
		float2 offset = float2(0, 1) * TexelSize;
		result += tex2D(SourceMap, texCoord + offset);
	}

	{
		float2 offset = float2(1, 1) * TexelSize;
		result += tex2D(SourceMap, texCoord + offset);
	}

	// middle

	{
		float2 offset = float2(-1, 0) * TexelSize;
		result += tex2D(SourceMap, texCoord + offset);
	}

	{
		result += tex2D(SourceMap, texCoord);
	}

	{
		float2 offset = float2(1, 0) * TexelSize;
		result += tex2D(SourceMap, texCoord + offset);
	}

	// bottom

	{
		float2 offset = float2(-1, -1) * TexelSize;
		result += tex2D(SourceMap, texCoord + offset);
	}

	{
		float2 offset = float2(0, -1) * TexelSize;
		result += tex2D(SourceMap, texCoord + offset);
	}

	{
		float2 offset = float2(1, -1) * TexelSize;
		result += tex2D(SourceMap, texCoord + offset);
	}


	result /= 9.0f;

	return result;
}